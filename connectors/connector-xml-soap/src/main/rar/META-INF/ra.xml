<?xml version="1.0" encoding="UTF-8"?>

<connector xmlns="http://java.sun.com/xml/ns/j2ee"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee
           http://java.sun.com/xml/ns/j2ee/connector_1_5.xsd"
           version="1.5">

   <vendor-name>Red Hat Middleware LLC</vendor-name>
   <eis-type>Teiid XML SOAP Connector</eis-type>
   <resourceadapter-version>1.0</resourceadapter-version>
   <license>
      <description>
 JBoss, Home of Professional Open Source.
 Copyright 2006, Red Hat Middleware LLC, and individual contributors
 as indicated by the @author tags. See the copyright.txt file in the
 distribution for a full listing of individual contributors.

 This is free software; you can redistribute it and/or modify it
 under the terms of the GNU Lesser General Public License as
 published by the Free Software Foundation; either version 2.1 of
 the License, or (at your option) any later version.

 This software is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 Lesser General Public License for more details.

 You should have received a copy of the GNU Lesser General Public
 License along with this software; if not, write to the Free
 Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 02110-1301 USA, or see the FSF site: http://www.fsf.org.
      </description>
      <license-required>true</license-required>
   </license>
   <resourceadapter>
      <resourceadapter-class>org.teiid.connector.basic.BasicResourceAdapter</resourceadapter-class>

      <outbound-resourceadapter>
         <connection-definition>
            <managedconnectionfactory-class>org.teiid.connector.xmlsource.soap.SoapManagedConnectionFactory</managedconnectionfactory-class>

            <config-property>
               <description>{$display:"Connector Class",$advanced:"true"}</description>
               <config-property-name>ConnectorClass</config-property-name>
               <config-property-type>java.lang.String</config-property-type>
               <config-property-value>org.teiid.connector.xmlsource.soap.SoapConnector</config-property-value>
            </config-property>

            <config-property>
               <description>{$display:"Connector Capabilities",$description:"The class to use to provide the Connector Capabilities",$advanced:"true"}</description>
               <config-property-name>CapabilitiesClass</config-property-name>
               <config-property-type>java.lang.String</config-property-type>
               <config-property-value>org.teiid.connector.xmlsource.soap.SoapSourceCapabilities</config-property-value>
            </config-property>
            
            <config-property>
               <description>{$display:"Is Immutable",$description:"Is Immutable, True if the source never changes.",$advanced:"true"}</description>
               <config-property-name>Immutable</config-property-name>
               <config-property-type>java.lang.Boolean</config-property-type>
               <config-property-value>true</config-property-value>
            </config-property>
            
            <config-property>
               <description>{$display:"Is XA Capable",$description:"True, if this connector supports XA Transactions",$advanced:"true"}</description>
               <config-property-name>XaCapable</config-property-name>
               <config-property-type>java.lang.Boolean</config-property-type>
               <config-property-value>false</config-property-value>
            </config-property>            

            <config-property>             
               <description>{$display:"Exception on Exceeding Max Rows",$description:"Indicates if an Exception should be thrown if the specified value for Maximum Result Rows is exceeded; else no exception and no more than the maximum will be returned",$advanced:"true"}</description>
               <config-property-name>ExceptionOnMaxRows</config-property-name>
               <config-property-type>java.lang.Boolean</config-property-type>
               <config-property-value>true</config-property-value>
            </config-property>

            <config-property>
               <description>{$display:"Maximum Result Rows",$description:"Maximum Result Rows allowed",$advanced:"true"}</description>
               <config-property-name>MaxResultRows</config-property-name>
               <config-property-type>java.lang.Integer</config-property-type>
               <config-property-value>-1</config-property-value>
            </config-property>

            <!--  XML Source SOAP Connector Specific properties -->
            <config-property>
                <description>{$display:"Authentication User Password",$description:"Password value for authentication",$advanced:"true",$masked:"true"}</description>
                <config-property-name>AuthPassword</config-property-name>
                <config-property-type>java.lang.String</config-property-type>
            </config-property>
            
            <config-property>
                <description>{$display:"SAML Property File (only required when SAML profile used)",$description:"SAML Security property file (saml.properties)",$advanced:"true"}</description>
                <config-property-name>SAMLPropertyFile</config-property-name>
                <config-property-type>java.lang.String</config-property-type>
            </config-property>
            
            <config-property>
                <description>{$display:"WSDL File (URL)",$description:"URL to Web Service Definition File",$required:"true"}</description>
                <config-property-name>wsdl</config-property-name>
                <config-property-type>java.lang.String</config-property-type>
            </config-property>
            
            <config-property>
                <description>{$display:"Authentication User Name",$description:"Name value for authentication",$advanced:"true"}</description>
                <config-property-name>AuthUserName</config-property-name>
                <config-property-type>java.lang.String</config-property-type>
            </config-property>
            
            <config-property>
                <description>{$display:"WS-Security Type(UsernameToken, SAML..)",$description:"Type of WS-Security to be used; Combinations of multiple security types can be used with a space in-between. Allowed types are: (UsernameToken, UsernameToken-Digest, SAMLTokenUnsigned, SAMLTokenSigned, Signature, Timestamp, Encrypt)"}</description>
                <config-property-name>WSSecurityType</config-property-name>
                <config-property-type>java.lang.String</config-property-type>
            </config-property>
            
            <config-property>
                <description>{$display:"Encrypt UserName (only if Encrypt profile used)",$description:"The username to be used in the encryption; if blank uses auth username",$advanced:"true"}</description>
                <config-property-name>EncryptUserName</config-property-name>
                <config-property-type>java.lang.String</config-property-type>
            </config-property>
            
            <config-property>
                <description>{$display:"Alternate End Point",$description:"An alternate service endpoint other than one specified in WSDL, to execute the service"}</description>
                <config-property-name>EndPoint</config-property-name>
                <config-property-type>java.lang.String</config-property-type>
            </config-property>
            
            <config-property>
                <description>{$display:"WebService Security Used(None, HTTPBasic, WS-Security)",$description:"Type of Authentication to used with the web service; If WS-Secuirty is being used, then WS-Secuirty type must be defined",$required:"true"}</description>
                <config-property-name>SecurityType</config-property-name>
                <config-property-type>java.lang.String</config-property-type>
                <config-property-value>None</config-property-value>
            </config-property>
            
            <config-property>
                <description>{$display:"User Crypto Property File (If SAML or Signature profile used)",$description:"The file defines properties of cryptography;defines the certificates;(crypto.properties)",$advanced:"true"}</description>
                <config-property-name>CryptoPropertyFile</config-property-name>
                <config-property-type>java.lang.String</config-property-type>
            </config-property>
            
            <config-property>
                <description>{$display:"Encrypt crypto property file (only if Encrypt profile used)",$description:"The file defines properties of cryptography for encryption of the message;(crypto.properties)",$advanced:"true"}</description>
                <config-property-name>EncryptPropertyFile</config-property-name>
                <config-property-type>java.lang.String</config-property-type>
            </config-property>
            
            <config-property>
                <description>{$display:"Trust Type:(DirectReference or IssuerSerial)",$description:"Only required for Signature and Signed SAML; The issuer-serial method presumes that all trusted users of the service are known to the service and have pre-registered their certificate chains before using the service. The direct-reference method presumes that the service operator trusts all users with certificates issued by a trusted CA.",$advanced:"true"}</description>
                <config-property-name>TrustType</config-property-name>
                <config-property-type>java.lang.String</config-property-type>
                <config-property-value>DirectReference</config-property-value>
            </config-property>
                    
            <config-property>
                <description>{$display:"Port Name"}</description>
                <config-property-name>PortName</config-property-name>
                <config-property-type>java.lang.String</config-property-type>
            </config-property>
            
            <config-property>
                <description>{$display:"Service Name"}</description>
                <config-property-name>ServiceName</config-property-name>
                <config-property-type>java.lang.String</config-property-type>
            </config-property>            

            <config-property>
                <description>{$display:"Query Timeout"}</description>
                <config-property-name>QueryTimeout</config-property-name>
                <config-property-type>java.lang.Integer</config-property-type>
                <config-property-value>-1</config-property-value>
            </config-property>
            
            <!-- XML-Relational Stuff -->
            <config-property>
                <description>{$display:"XML Filter Provider",$description:"The class the provides extended XML Filters",$advanced:"true"}</description>
                <config-property-name>SaxFilterProviderClass</config-property-name>
                <config-property-type>java.lang.String</config-property-type>
                <config-property-value></config-property-value>
            </config-property>
            
            <config-property>
                <description>{$display:"Log XML Request and Response Documents",$description:"Write the request and response documents to the log at Info level",$advanced:"true"}</description>
                <config-property-name>LogRequestResponseDocs</config-property-name>
                <config-property-type>java.lang.Boolean</config-property-type>
                <config-property-value>false</config-property-value>
            </config-property>
            
            <config-property>
                <description>{$display:"Input Stream Filter Class",$description:"The class to use to preprocess raw XML input stream",$advanced:"true"}</description>
                <config-property-name>InputStreamFilterClass</config-property-name>
                <config-property-type>java.lang.String</config-property-type>
            </config-property>
            
            <config-property>
                <description>{$display:"Query Preprocessor Class",$description:"The class to use to preprocess the IQuery",$advanced:"true"}</description>
                <config-property-name>QueryPreprocessorClass</config-property-name>
                <config-property-type>java.lang.String</config-property-type>
            </config-property>             
            
            <!-- XML-Relational SOAP Stuff -->
            <config-property>
                <description>{$display:"Server URI",$description:"The URI of the HTTP source",$required:"true"}</description>
                <config-property-name>Uri</config-property-name>
                <config-property-type>java.lang.String</config-property-type>
            </config-property>
            
            <config-property>
                <description>{$display:"Parameter Method (None, Name/Value, XMLRequest, XMLInQueryString)",$description:"",$allowed:["None","Name/Value","XMLRequest","XMLInQueryString"],$editable:"false"}</description>
                <config-property-name>ParameterMethod</config-property-name>
                <config-property-type>java.lang.String</config-property-type>
                <config-property-value>XMLRequest</config-property-value>
            </config-property>
        
        <!--             
            <config-property>
                <description>{$display:"XML Parameter Name",$editable:"false"}</description>
                <config-property-name>XMLParmName</config-property-name>
                <config-property-type>java.lang.String</config-property-type>
            </config-property>
            
            <config-property>
                <description>{$display:"Exception on SOAP Fault",$description:"Throw connector exception when SOAP fault is returned from source.",$advanced:"true"}</description>
                <description>Throw connector exception when SOAP fault is returned from source.</description>
                <config-property-name>ExceptionOnSOAPFault</config-property-name>
                <config-property-type>java.lang.Boolean</config-property-type>
                <config-property-value>true</config-property-value>
            </config-property>
            
            <config-property>
                <description>{$display:"SOAP-Action",$description:"Value for SOAP-Action header",$advanced:"true"}</description>
                <config-property-name>SOAPAction</config-property-name>
                <config-property-type>java.lang.String</config-property-type>
            </config-property>
            
            <config-property>
                <description>{$display:"Access Method (Get, Post)",$description:"",$allowed:["get","post"],$editable:"false"}</description>
                <config-property-name>AccessMethod</config-property-name>
                <config-property-type>java.lang.String</config-property-type>
                <config-property-value>post</config-property-value>
            </config-property>
            
            <config-property>
                <description>{$display:"Proxy Server URI",$description:"The URI of the proxy server"}</description>
                <config-property-name>ProxyUri</config-property-name>
                <config-property-type>java.lang.String</config-property-type>
            </config-property>
            
            <config-property>
                <description>{$display:"Encoding Style (RPC - Encoded, RPC - Literal, Document - Literal, Document - Encoded)",$description:"Encoding Style",$allowed:["RPC - Encoded","RPC - Literal","Document - Literal","Document - Encoded"],$required:"true"}</description>
                <config-property-name>EncodingStyle</config-property-name>
                <config-property-type>java.lang.String</config-property-type>
                <config-property-value>Document - Literal</config-property-value>
            </config-property>
                                    
            <config-property>
                <description>{$display:"Hostname Verifier",$description:"a class implmenting javax.net.ssl.HostnameVerifier.  Used to implement a hostname mismatch workaround.",$advanced:"true"}</description>
                <config-property-name>HostnameVerifier</config-property-name>
                <config-property-type>java.lang.String</config-property-type>
            </config-property>
             -->
             
            <connectionfactory-interface>org.teiid.connector.api.Connector</connectionfactory-interface>
            <connectionfactory-impl-class>org.teiid.connector.basic.WrappedConnector</connectionfactory-impl-class>
            <connection-interface>org.teiid.connector.api.Connection</connection-interface>
            <connection-impl-class>org.teiid.connector.basic.WrappedConnection</connection-impl-class>

         </connection-definition>
         
         <transaction-support>NoTransaction</transaction-support>
        
        <authentication-mechanism>
            <authentication-mechanism-type>BasicPassword</authentication-mechanism-type>
            <credential-interface>javax.resource.spi.security.PasswordCredential</credential-interface>
        </authentication-mechanism>
        <reauthentication-support>false</reauthentication-support>
      </outbound-resourceadapter>
   </resourceadapter>
</connector>
