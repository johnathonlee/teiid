<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter id="custom_security">
  <title>MetaMatrix Security</title>
  <sect1>
    <title>MetaMatrix Security</title>
    <sect2>
      <title>Introduction</title>
      <para>The MetaMatrix system provides a range of built-in and extensible security features to enable the
        secure access of data.  </para>
      <para />
      <para>For more detailed information see the:</para>
      <orderedlist>
        <listitem>
          <para>Console Guide – for instructions on how to set a range of security
            settings, on installing Membership Domains, and on setting up roles.</para>
        </listitem>
        <listitem>
          <para>Connector Developers Guide – for information on how custom connectors can be
            developed with advanced security features.</para>
        </listitem>
        <listitem>
          <para>Web Services Guide – for information on how to secure web service
            access to MetaMatrix</para>
        </listitem>
        <listitem>
          <para>Client Developers Guide – for information on how to authenticate
            through JDBC and ODBC.</para>
        </listitem>
      </orderedlist>
    </sect2>
    <sect2>
      <title>Authentication</title>
      <para>JDBC, ODBC, and web service clients may use simple passwords, a pass-through mechanism called a
        trusted payload, or a combination of that and related information to authenticate a user.  </para>
      <para />
      <para>Typically a user name is required, however user names may be considered optional if the
        identity of the user can be discerned from the trusted payload or another mechanism.  In any case it is up
        to the installed membership domains to actually determine whether a user can be authenticated.</para>
      <para />
      <para>NOTE: All passwords or security credentials that are passed through the MetaMatrix system will
        either be encrypted or sent of an encrypted transport by default.</para>
    </sect2>
    <sect2>
      <title>Authorization</title>
      <para>Authorization is split into three areas of concern.  Admin roles, repository roles, and
        data roles can be managed in the Console to enforce authorization of administrative tasks, the MetaBase
        repository, and enterprise data respectively.  A role is simply a collection of permissions and a
        collection of entitled principals.  Currently the MetaMatrix security system only allows principals that
        represent groups to be assigned to a role. The set of available groups are determined by the installed
        membership domains.</para>
    </sect2>
  </sect1>
  <sect1>
    <title> Membership Domains</title>
    <para>Membership domains are at the core of MetaMatrix’s security system and bridge the gap between
      MetaMatrix and an external security system.  A membership domain provides:</para>
    <itemizedlist>
      <listitem>
        <para>User authentication</para>
      </listitem>
      <listitem>
        <para>A set of groups</para>
      </listitem>
      <listitem>
        <para>The groups to which an authenticated user belongs</para>
      </listitem>
    </itemizedlist>
    <para>Access to membership domains is coordinated through the Membership Service.  The Membership
      Service together with the Authorization Service implement the necessary logic to authenticate users,
      determine role membership, and to enforce roles.</para>
    <para>
      There are multiple types of membership domains that allow for connectivity to different security systems.
       A MetaMatrix server environment can be configured with multiple membership domains (there can be multiple
      instances of a given membership domain type).  Each membership domain instance must be assigned a unique
      domain name in the MetaMatrix system.  The domain name can be used to fully qualify user names to
      authenticate only against that domain.  The format for a qualified name is
      <ulink url="mailto:username@domain">username@domainname.</ulink>
    </para>
    <para>If a user name is not fully qualified, then the installed membership domains will be consulted in
      order until a domain successfully or unsuccessfully authenticates the user.  If a membership domain reports
      the user does not exist or that the credentials are not recognized, that is not considered an unsuccessful
      authentication and the next membership domain will be consulted.</para>
    <para>If no membership domain can authenticate the user, the logon attempt will fail.  For any failed logon
      attempt the message the users sees will always be the same.  It will simply indicate the user could not be
      authenticated by any membership domain – it will not reveal any further details which could potentially be
      sensitive information.  Details including invalid users, which domains were consulted, etc. will be in the
      server log with appropriate levels of severity.</para>
    <sect2>
      <title>Built-in Membership Domains</title>
      <para>The MetaMatrix Enterprise System provides LDAP and File membership domain types.  </para>
      <para>The LDAP membership domain provides flexible integration with a variety of LDAP servers through JNDI
        (Java Naming and Directory Interface).  Enterprise environments with an LDAP compliant directory server
        should attempt to utilize the built-in LDAP membership domain before attempting to create a custom
        solution.</para>
      <para>The File membership domain utilizes a simple set of text files to authenticate users and to define
        their groups.  Please note however that the File membership domain is not intended for production use.
      </para>
      <para>Instructions for configuring both of these can be found in the MetaMatrix Enterprise
        Console Guide.</para>
      <para>Support will be added for additional membership domains with subsequent releases.</para>
    </sect2>
    <sect2>
      <title>Custom Membership Domains</title>
      <para>In circumstances not covered by a built-in membership domain, a custom membership domain allows the
        MetaMatrix security system to interact seamlessly with other enterprise security providers.  </para>
      <para>Java development is required to implement a custom membership domain.  The API and a full example
        are covered in the following chapters of this document.   If there are any additional questions about
        custom membership domain development, MetaMatrix technical support should be contacted.</para>
    </sect2>
  </sect1>

</chapter>