<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter id="step-3">
  <title>Building a VDB</title>
  <para>A VDB can be built with either the <link linkend="designer">Designer</link> tool or through a simple XML file called a dynamic VDB.  See the dyanmicvdb-portolio for an example dynamic VDB.  You can skip the next section if you choose to use a dynamic VDB.</para>
  <sect1 id="designer">
  <title>Using Teiid Designer to build a VDB</title>
    <sect2>
    <title>Download Teiid Designer</title>
    
    <note>
      <para>
        If you would like to skip building your own VDB, you can safely go to next page and continue with the 
        exercise as there is a pre-built VDB available for your convenience in the 
        examples/portfolio/PortfolioModel directory of the download.
      </para>
    </note>
        
    <para>
      The Teiid Designer project provides a Eclipse based designer tool for this purpose of building a VDB. You can
      download Teiid Designer
      <ulink url="http://www.jboss.org/teiiddesigner/downloads.html">here</ulink>
      Once downloaded, please follow the installation instructions. Start the Teiid Designer and return here to continue
      building the VDB.
    </para>
  </sect2>
      
    <para>Once you start the Designer, there are several steps you must perform to create a VDB. These steps are 
    summarized in the following table.</para>
    <orderedlist>
      <listitem>
        <para>Switch to the Designer Perspective, by opening the "Window->Open Perspective.."</para>
      </listitem>
      <listitem>
        <para>Create new "Model Project", using "File->New->ModelProject"</para>
      </listitem>
      <listitem>
        <para>Import the Derby database's "account" schema into a source model.</para>
      </listitem>
      <listitem>
        <para>Manually create the view model for the "Text File". Create a Table called "Price" with
          "stock" and "price" as column names. In the transformation window add the following SQL</para>
      </listitem>
      <listitem>
        <para>Create a view model called "AccountView"</para>
      </listitem>
      <listitem>
        <para>In the "AccountView" model, create a virtual table (called as Base Table in the menu), and build
          the transformation query combining the "Accounts" tables with "Price" table</para>
      </listitem>
      <listitem>
        <para>In the "AccountView" model, create a virtual procedure called "buyStock", to learn about procedure
          language.</para>
      </listitem>
      <listitem>
        <para>Create a VDB based on the models created</para>
      </listitem>
      <listitem>
        <para>Test the created VDB with some ad-hoc queries inside Designer.</para>
      </listitem>
      <listitem>
        <para>Export or copy the VDB for use in your application.</para>
      </listitem>
    </orderedlist>
    </sect1>
</chapter>