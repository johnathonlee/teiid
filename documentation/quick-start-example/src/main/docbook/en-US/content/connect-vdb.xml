<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter id="OpenConnection">
  <title>Connecting to VDB through JDBC</title>
  <para>Now that you have gone through deployment of Federate Embedded and your VDB, now its time for your
    application to connect to this virtual database and issue SQL queries and view the integrated data. Note that
    this process is no different than connecting to any JDBC source.</para>
  <sect1>
    <title>Stand-alone Application Deployment</title>
    <para>
      From a Java application in order to connect to a JDBC source, you would need URL, user-id, password. To
      connect to your VDB all you need is URL and any additional optional properties that you would like to set
      such as log file, number of threads etc. Currently the Federate Embedded is not associated with any user
      authentication system, so user-id and password are not required. The JDBC connection is supported through
      <emphasis>"com.metamatrix.jdbc.EmbeddedDriver"</emphasis>
      driver requires the URL syntax of
    </para>
    <para>
      <emphasis>jdbc:metamatrix:&lt;VDB-Name&gt;</emphasis>
    </para>
    <para/>
    <para>to connect to the VDB. You can add any additional optional properties at the end after the semi-colon(;) using name=value
      format. If multiple properties are defined, they should be separated additional semi-colons. For example</para>
    <para />
    <para>
      <emphasis>jdbc:metamatrix:&lt;VDB-Name&gt;;dqp.logFile=/home/query.log</emphasis>
    </para>
    <para />
    <para>
      You can use any of these <ulink url="/project/federate/url-properties"></ulink>optional connection properties
      in your URL. Here is sample code showing how to make JDBC connection.
    </para>
    <programlisting><![CDATA[
      public void execute() throws SQLException {
          String url = "jdbc:metamatrix:Accounts";
          String sql = "select firstname, lastname from customer";
          
          Class.forName("com.metamatrix.jdbc.EmbeddedDriver");
          
          Connection connection;
          try{
              connection = DriverManager.getConnection(url);
              Statement statement = connection.createStatement();
              ResultSet results = statement.executeQuery(sql);
              while(results.next()) {
                System.out.println(results.getString(1));
                System.out.println(results.getString(2));
                ...
              }
              results.close();
              statement.close();
          } catch (SQLException e){
              e.printStackTrace();
              throw e;
          } finally {
              try{
                connection.close();
              }catch(SQLException e1){
                // ignore
              }              
          }
      }      
    ]]></programlisting>
    <para>You can also use <emphasis>com.metamatrix.jdbc.EmbeddedDataSource</emphasis>
      to make connection in your Java application. For example, you can use following code fragment to make a 
      connection to the VDB and issuing the query exactly same as in the above example</para>
      <programlisting><![CDATA[
        EmbeddedDataSource ds = new EmbeddedDataSource(); 
        ds.setDatabaseName("Accounts");
        
        Connection connection = ds.getConnection();
        ...
      ]]></programlisting>
      <para>EmbeddedData source also provides an option to set optional parameters using the "set" methods on the 
       data source look. For all the allowable properties at the 
       <ulink url="/project/federate/datasource-properties">data source properties</ulink>.</para>       
  </sect1>
  
  <para>For complete code for this example, look in the "examples/portfolio" directory. Compile your Java class and and 
   run it to see the results</para>
     
  <para>If your application is Web based application, you can also deploy Federate Embedded in application server 
  and treat it as any other JDBC source by creating a connection pool with the 
  <emphasis>com.metamatrix.jdbc.EmbeddedDataSource</emphasis> and assigning it a JNDI name. 
  Refer to <ulink url="/project/federate/deployments">deployment to application server</ulink> for more information</para>   
</chapter>