<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter id="deployment">
  <title>Deployment</title>
  <para> Now that we have built the VDB, we are ready to deploy the VDB. Essentially once we deploy we can connect
    to VDB using JDBC connection. Note that there are two steps involved in this deployment</para>
  <orderedlist>
    <listitem>
      <para>Deploying Federate Embedded</para>
    </listitem>
    <listitem>
      <para>Deploying VDB</para>
    </listitem>
  </orderedlist>
  <para> Federate Embedded can be deployed in a various different scenarios.</para>
  <itemizedlist>
    <listitem>
      <para>
        In a
        <link linkend="stand-alone-deployment">Stand-alone</link>
        Java application
      </para>
    </listitem>
    <listitem>
      <para>In a JEE Application Server (Deploy and Create connection pool)</para>
      <orderedlist>
        <listitem>
          <para>
            <link linkend="jboss-deployment">JBoss AS</link>
          </para>
        </listitem>
        <listitem>
          <para>
            <link linkend="websphere-deployment">Websphere</link>
          </para>
        </listitem>
        <listitem>
          <para>
            <link linkend="weblogic-deployment">Weblogic</link>
          </para>
        </listitem>
      </orderedlist>
    </listitem>
  </itemizedlist>
  <para />
  <para>You can also use any of your favorite JEE server like Glassfish etc. Choose the scenario which best
    applies for your use case and you can skip the rest of them. Note that there are two steps in this deployment
  </para>
  <para />
  <sect1>
    <title>Deployment Scenarios</title>
    <sect2 id="stand-alone-deployment">
      <title>Stand-alone Application Deployment</title>
      <para>Copy the "federate-${version}-embedded.jar" and all dependent jars in "lib" directory in your Java
        application's classpath along with your VDB. If your application is already using the any of dependent jars
        defined in "lib" directory you can safely ignore adding that jar file to the classpath. Make sure the that
        the versions match</para>
      <orderedlist>
        <listitem>
          <para>Add "federate-${version}-embedded.jar" to your application classpath</para>
        </listitem>
        <listitem>
          <para>Add all the dependent jar files in the "lib" directory ito your application's classpath. If your
            application is already using the any of dependent jars defined in "lib" directory you can safely ignore
            adding that jar file to the classpath. Make sure the that the versions match</para>
        </listitem>
        <listitem>
          <para>Place VDB in a folder and add this folder and add this folder to your applications classpath
          </para>
        </listitem>
        <listitem>
          <para>
            Now check out next section on how to
            <link linkend="OpenConnection">connect to the VDB</link>
          </para>
        </listitem>
      </orderedlist>
    </sect2>
    <sect2 id="jboss-deployment">
      <title>JBoss AS Deployment</title>
      <para>There are two parts to deploying in JBoss AS, first deploying all the required jars and VDB,
        second creating data source connection pool for the VDB</para>
      <para>
        If you are using "default" server option, copy the "federate-${version}-embedded.jar" and all dependent
        jars in "lib" directory to
        <emphasis>"&lt;jboss-install&gt;/server/default/lib"</emphasis> directory along with the VDB. Note that 
        several dependent jars may already present in the "lib" directory, make sure you have no conflicts</para>
        
       <para>Now create a connection pool for the deployed VDB, by creating XML file in following format. Note that JBossAS
       requires you to define the XML file name to end with "-ds.xml" and place this file in 
       <emphasis>"&lt;jboss-install&gt;/server/default/deploy"</emphasis> directory. For example</para>

       <programlisting><![CDATA[
          <?xml version="1.0" encoding="UTF-8"?>
          <datasources> 
            <local-tx-datasource> 
              <jndi-name>MMDS</jndi-name> 
              <connection-url>jdbc:metamatrix:<your-vdb-name></connection-url> 
              <driver-class>com.metamatrix.jdbc.EmbeddedDriver </driver-class>  
              <min-pool-size>5</min-pool-size> 
              <max-pool-size>10</max-pool-size>
              <connection-property name="optional-property">Optional Property Value</connection-property>
            </local-tx-datasource> 
          </datasources>               
        ]]>
       </programlisting>       
       
       <para/>
       
       <para>If you would like to use <emphasis>EmbeddedDatasource</emphasis> instead of <emphasis>EmbeddedDriver</emphasis> 
       you can use the following the 
       XML file format. Also, use the DataSource format if you think you will be participating in XA transactions. Generally, 
       the use of <emphasis>EmbeddedDataSource</emphasis> is recommended over <emphasis>EmbeddedDriver</emphasis></para>
       
       <programlisting><![CDATA[
        <?xml version="1.0" encoding="UTF-8"?>
        <datasources>
           <xa-datasource>
             <jndi-name>MMDS</jndi-name>
             <xa-datasource-class>com.metamatrix.jdbc.EmbeddedDataSource</xa-datasource-class>
             <xa-datasource-property name="DatabaseName"><your-vdb-name></xa-datasource-property>                           
           </xa-datasource>        
        </datasources>       
       ]]>
       </programlisting>       
       <para>Note that these are minimal properties that need to be defined for creating a data source. Other 
       optional properties can also be defined in here in the XML file for further configuration. Also note 
       that the &lt;your-vdb-name&gt; is the name of your VDB with out the ".vdb" extension </para> 
    </sect2>
    
    <sect2 id="websphere-deployment">
      <title>Websphere Deployment</title>
      <orderedlist>
        <listitem>
          <para>Start the WebSphere application server. The start script should be located at WS_INSTALL/bin/
          </para>
        </listitem>
        <listitem>
          <para>Log into the WebSphere Console</para>
        </listitem>
        <listitem>
          <para>In the menu on the left, expand the 'Resources' menu and click on 'JDBC Providers'</para>
        </listitem>
        <listitem>
          <para>Click the 'New' button to add a new JDBC Provider</para>
        </listitem>
        <listitem>
          <para>Under Configuration -> General Properties -> JDBC Providers choose 'User-defined JDBC Provider'
            from the drop down menu and click 'OK'.</para>
        </listitem>
        <listitem>
          <para>Under Configuration -> General Properties -> Name, enter a name for this JDBC Provider –
            'Federate' (or any name you like)</para>
        </listitem>
        <listitem>
          <para>Under Configuration -> General Properties -> Classpath, enter the classpath for this JDBC
            Provider, and select "federate-${version}-embedded.jar file.</para>
        </listitem>
        <listitem>
          <para>You can add all the dependencies in same way or add to the Websphere classpath</para>
        </listitem>
        <listitem>
          <para>Under Configuration -> General Properties -> Implementation Classname, enter: <emphasis>com.metamatrix.jdbc.EmbeddedDataSource</emphasis>
          </para>
        </listitem>
        <listitem>
          <para>Click Apply, then scroll down to the bottom of the window and, under 'Additional Properties',
            click on 'Data Sources'. Then click 'New'.</para>
        </listitem>
        <listitem>
          <para>Under Configuration -> General Properties -> Name, enter a name for your data source – 'MMDS'
          </para>
        </listitem>
        <listitem>
          <para>Under Configuration -> General Properties -> JNDI Name, enter 'MMDS' again</para>
        </listitem>
        <listitem>
          <para>Click Apply, then scroll down to the bottom of the window and, under 'Additional Properties',
            click 'Custom Properties' to start adding your data source specific information.</para>
        </listitem>
        <listitem>
          <para>
            Add property
            <emphasis>databaseName</emphasis>
            and add name of your VDB as value. The rest of the properties – 'logFile', 'logLevel', etc - are optional.
          </para>
        </listitem>
        <listitem>
          <para>Once you are finished, make sure you save your changes to the Master Configuration.</para>
        </listitem>
        <listitem>
          <para>You can verify that the DataSource is deployed and running using the WebSphere console.</para>
        </listitem>
      </orderedlist>
      <note>
        <para>These instructions will vary depending on WebSphere version and whether you are running a cluster. Please refer to WebSphere documentation for more information. </para>
      </note>
    </sect2>
  <sect2 id="weblogic-deployment">
    <title>WebLogic Deployment</title>
    <para>Make the Federate jars available in the WebLogic startup script class path. Change startWebLogic.cmd
      (located at WL_INSTALL/user_projects/domains/{your_domain}/) as follows:</para>
    <programlisting><![CDATA[
        set MMQ_JARS = federate-${version}-embedded.jar,<all other dependent jars in "lib" directory>, <vdb-file>
        set CLASSPATH=%WEBLOGIC_CLASSPATH%; %MMQ_JARS%; %JAVA_HOME%/jre/lib/rt.jar; 
        %WL_HOME%/server/lib/webservices.jar; 
        %CLASSPATH% 
      ]]></programlisting>
    <para> To create a JDBC connection pool for the VDB, follow the below steps</para>
    <orderedlist>
      <listitem>
        <para>Start the WebLogic Console.</para>
      </listitem>
      <listitem>
        <para>Create a Connection Pool: navigate to the 'Connection Pools' folder under {YourDomain} ->
          Services -> JDBC -> Connection Pools</para>
      </listitem>
      <listitem>
        <para>In the menu on the left, expand the 'Resources' menu and click on 'JDBC Providers'</para>
      </listitem>
      <listitem>
        <para>Under 'Choose database', select 'Other' from the 'Database Type' drop down menu and click
          'Continue'.</para>
      </listitem>
      <listitem>
        <para>Enter the following properties for your Connection Pool:</para>
        <itemizedlist>
          <listitem>
            <para>Name: MMPool</para>
          </listitem>
          <listitem>
            <para>Driver Classname: com.metamatrix.jdbc.EmbeddedDriver</para>
          </listitem>
          <listitem>
            <para>URL:jdbc:metamatrix:&lt;vdb_name&gt;</para></listitem>
            <listitem><para>Database User Name: N/A </para></listitem>
            <listitem><para>Password: N/A </para></listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para>Click 'Test Driver Configuration' – once this is successful, create and deploy your connection pool
          </para>
        </listitem>
        <listitem>
          <para>Create a DataSource: navigate to the 'Data Sources' folder under {YourDomain} -> Services -> JDBC
            -> Data Sources</para>
        </listitem>
        <listitem>
          <para>Click on 'Configure a new JDBC Data Source'</para>
        </listitem>
        <listitem>
          <itemizedlist>
            <listitem>
              <para>Name: MMDS</para>
            </listitem>
            <listitem>
              <para>JNDI Name : MMDS</para>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para>Click continue and then map this Data Source to the Connection Pool (MMPool) that was just created.
          </para>
        </listitem>
        <listitem>
          <para>Stop and Restart WebLogic.</para>
        </listitem>
        <listitem>
          <para>You can verify that the DataSource and Pool are deployed and running using the WebLogic console.
          </para>
        </listitem>
      </orderedlist>
      <note>
        <para>These instructions will vary depending on WebLogic version and whether you are running a cluster.
          When running in a cluster you will need to modify the "startManagedWeblogic" scripts. Please refer to
          WebLogic documentation for more information.</para>
      </note>  
    </sect2>
  </sect1>
</chapter>