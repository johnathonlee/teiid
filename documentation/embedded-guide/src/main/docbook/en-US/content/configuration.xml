<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter id="OpenConnection">
  <title>Connecting to VDB through JDBC</title>
  <para>Now that we have gone through deployment of Federate Embedded and your VDB, now its time for your
    application to connect to this virtual database and issue SQL queries, this is no different than connecting to
    any JDBC source</para>
  <sect1>
    <title>Deployed Scenarios</title>
    <sect2>
      <title>Stand-alone Application Deployment</title>
      <para>
        In your Java application, in order to connect to any JDBC source, you would need URL, user-id, password. To
        connect to your VDB all you need is URL and any additional optional properties you would like to set such
        as log file, number of threads etc. The JDBC connection is supported through
        <emphasis>"com.metamatrix.jdbc.EmbeddedDriver"</emphasis>
        and this driver requires the URL syntax of
      </para>
      <para>
        <emphasis>jdbc:metamatrix:&lt;VDB-Name&gt;</emphasis>
      </para>
      <para/>
      <para>to connect to the VDB. You can add any additional optional properties at the end after the semi-colon(;) using name=value
        format. If multiple properties are defined, they should be separated additional semi-colons. For example</para>
      <para />
      <para>
        <emphasis>jdbc:metamatrix:&lt;VDB-Name&gt;;dqp.logFile=/home/query.log</emphasis>
      </para>
      <para />
      <para>
        You can use any of these <link linkend="url-properties">optional connection properties</link>
        in your URL. Here is sample code showing how to make JDBC connection, below for example purposes the VDB name is 
        assumed as "Accounts" and there is table called "customer" in the VDB.
      </para>
      <programlisting><![CDATA[
        public void execute() throws SQLException {
            String url = "jdbc:metamatrix:Accounts";
            String sql = "select firstname, lastname from customer";
            
            Class.forName("com.metamatrix.jdbc.EmbeddedDriver");
            
            Connection connection;
            try{
                connection = DriverManager.getConnection(url);
                Statement statement = connection.createStatement();
                ResultSet results = statement.executeQuery(sql);
                while(results.next()) {
                  System.out.println(results.getString(1));
                  System.out.println(results.getString(2));
                  ...
                }
                results.close();
                statement.close();
            } catch (SQLException e){
                e.printStackTrace();
                throw e;
            } finally {
                try{
                  connection.close();
                }catch(SQLException e1){
                  // ignore
                }              
            }
        }      
      ]]></programlisting>
      <para>For complete examples look in examples section. Please note that you can also use <emphasis>EmbeddedDataSource</emphasis>
        to make connection in your Java application for example</para>
        <programlisting><![CDATA[
          EmbeddedDataSource ds = new EmbeddedDataSource(); 
          ds.setDatabaseName("Accounts");
          
          Connection connection = ds.getConnection();
          ...
        ]]></programlisting>
        <para>For all the available "set" methods on the data source look at the <link linkend="connection_properties">connection properties</link> section below.</para>       
    </sect2>
    
    <sect2>
      <title>Inside  Application Server (JBossAS, Weblogic, etc)</title>
      <para>The following example code is specific to application servers where the client obtains a connection
        through JNDI using JDBC DataSource. Make sure you have the correct JNDI name for your source and inside your Servlet code or in Session Bean use the following code </para>
      <programlisting><![CDATA[
        InitialContext context = new InitialContext(); 
        DataSource ds = (DataSource)context.lookup("jndi:/MMDS"); 
        Connection connection = ds.getConnection();    
        ...   
      ]]></programlisting>

    </sect2>    
    
  </sect1>
  <sect1 id="connection_properties">
    <title>Connection Properties</title>
    <para> The following properties can be optionally specified JDBC connection URL or DataSource. On URL properties
      are specified using name=value syntax. Multiple properties are separated by semi-colons.DataSource properties are 
      specified using JavaBean syntax:</para>
    <itemizedlist>
      <listitem>
        <para>set&lt;PropertyName&gt;(&lt;propertyValue&gt;) </para>
      </listitem>
    </itemizedlist>
    <para>Also note the column header as to which/how property maps to Driver vs Data Source</para>
    <table frame="all">
        <title>Connection Properties</title>
        <tgroup cols='4' align='left' colsep='1' rowsep='1'>
          <colspec colname='c1' colwidth="1*"/>
          <colspec colname='c2' colwidth="1*"/>
          <colspec colname='c3' colwidth="1*"/>
          <colspec colname='c4' colwidth="2*"/>
          <thead>      
            <row>
            <entry>
              <para>DataSource Property</para>
            </entry>
            <entry>
              <para>JDBC URL Property</para>
            </entry>
            <entry>
              <para>Type</para>
            </entry>
            <entry>
              <para>Value</para>
            </entry>
            </row>
          </thead>      
        <tbody>
          <row>
            <entry>
              <para>ClientToken</para>
            </entry>
            <entry>
              <para>N/A</para>
            </entry>
            <entry>
              <para>Serializable</para>
            </entry>
            <entry>
              <para>The optional client token will be passed directly through to the connectors, which may use it,
                and/or pass it down to their underlying data source.</para>
              <para>The form and type of the client token is up to the client but it must implement the
                Serializable interface. Federate does nothing with this token except to make it available for
                authentication/augmentation/replacement upon authentication to the system and to connectors that may
                require it at the data source level.</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>DatabaseName</para>
            </entry>
            <entry>
              <para>N/A</para>
            </entry>
            <entry>
              <para>String</para>
            </entry>
            <entry>
              <para>The name of a particular virtual database deployed to Federate Embedded.This property is
                required if connecting via a DataSource in a stand-alone Java application.</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>DatabaseVersion</para>
            </entry>
            <entry>
              <para>Version</para>
            </entry>
            <entry>
              <para>String</para>
            </entry>
            <entry>
              <para>The optional version of a particular virtual database deployed to Federate Embedded; if not
                supplied, then the latest version is assumed.</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>Description</para>
            </entry>
            <entry>
              <para>N/A</para>
            </entry>
            <entry>
              <para>String</para>
            </entry>
            <entry>
              <para>The optional description of this data source.</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>LogFile</para>
            </entry>
            <entry>
              <para>LogFile</para>
            </entry>
            <entry>
              <para>String</para>
            </entry>
            <entry>
              <para>The optional path and file name to which JDBC log statements will be written; if none is
                specified, then no log statements will be written.</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>LogLevel</para>
            </entry>
            <entry>
              <para>LogLevel</para>
            </entry>
            <entry>
              <para>int</para>
            </entry>
            <entry>
              <para>The optional level for logging, which only applies if the logFile property is set. Value must
                be one of the following:</para>
              <orderedlist>
                <listitem>
                  <para>"0" - no JDBC log messages will be written; this is the default</para>
                </listitem>
                <listitem>
                  <para>"1" - all JDBC log messages will be written</para>
                </listitem>
                <listitem>
                  <para>"2" - all JDBC log messages as well as stack traces of any exceptions thrown from this
                    driver will be written</para>
                </listitem>
              </orderedlist>
            </entry>
          </row>
          <row>
            <entry>
              <para>ApplicationName</para>
            </entry>
            <entry>
              <para>ApplicationName</para>
            </entry>
            <entry>
              <para>String</para>
            </entry>
            <entry>
              <para>The optional name of the application. Supplying this property may allow an administrator of
                Federate Embedded to better identify individual connections and usage patterns.</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>FetchSize</para>
            </entry>
            <entry>
              <para>FetchSize</para>
            </entry>
            <entry>
              <para>String</para>
            </entry>
            <entry>
              <para>The optional property to set the size of result sets. The default fetch size is: 500; &lt;= 0 indicates not set.</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>PartialResultsMode</para>
            </entry>
            <entry>
              <para>PartialResultsMode</para>
            </entry>
            <entry>
              <para>String</para>
            </entry>
            <entry>
              <para>The optional property (on/off) to enable support partial results mode.</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>SqlOptions</para>
            </entry>
            <entry>
              <para>SqlOptions</para>
            </entry>
            <entry>
              <para>String</para>
            </entry>
            <entry>
              <para>Set to 'SHOWPLAN' for the query plan description to be returned with all executed statements. This is
                equivalent to adding OPTION SHOWPLAN to every command executed on the Connection.</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>DataSourceName</para>
            </entry>
            <entry>
              <para>DataSourceName</para>
            </entry>
            <entry>
              <para>String</para>
            </entry>
            <entry>
              <para>The logical name for the underlying XADataSource or ConnectionPoolDataSource; used only when pooling
                connections or distributed transactions are implemented.</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>ResultSetCacheMode</para>
            </entry>
            <entry>
              <para>ResultSetCacheMode</para>
            </entry>
            <entry>
              <para>String</para>
            </entry>
            <entry>
              <para>The default result set cache mode to use for all commands on this connection. Value must be one of the
                following:</para>
              <orderedlist>
                <listitem>
                  <para>"false" – partial results mode will not be used</para>
                </listitem>
                <listitem>
                  <para>"true" – partial results mode will be used</para>
                </listitem>
              </orderedlist>
              <para>Default value = "true"</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>TransactionAutoWrap</para>
            </entry>
            <entry>
              <para>TxnAutoWrap</para>
            </entry>
            <entry>
              <para>String</para>
            </entry>
            <entry>
              <para>The mode that determines when to automatically wrap commands in auto-commit mode in a transaction. You
                can set this to:</para>
              <orderedlist>
                <listitem>
                  <para>ON to always wrap commands</para>
                </listitem>
                <listitem>
                  <para>OFF to never wrap commands</para>
                </listitem>
                <listitem>
                  <para>PESSIMISTIC to make a call to the server to determine if the transaction requires
                    wrapping, and then to wrap the commands if necessary</para>
                </listitem>
                <listitem>
                  <para>OPTIMISTIC (default) to assume that no wrapping is necessary, but to throw an exception if
                    the submitted command requires a transaction to update multiple data sources</para>
                </listitem>
              </orderedlist>
              <para>
                Federate allows specification of OFF to indicate that transaction calls (setAutoCommit, commit, rollback)
                can be called but
                <emphasis>will be ignored</emphasis>
                , which gives the appearance of transactions without the actuality of them. This should be used with extreme
                caution.
              </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>BootstrapFile</para>
            </entry>
            <entry>
              <para>(you can use the path to the file in URL like jdbc:metamatrix:VDB@/path/to/file.properties)</para>
            </entry>
            <entry>
              <para>String</para>
            </entry>
            <entry>
              <para>The absolute path to the MetaMatrix Query bootstrap file.This property is required if connecting via a DataSource in a stand-alone Java application.</para>
            </entry>
          </row>          
        </tbody>
      </tgroup>
    </table>
  </sect1>
  
  <sect1 id ="configuration_properties">
    <title>Process Configuration Properties</title>
    <para>
      The following configuration properties control the execution of
      Federate Query. These properties can be passed on the URL or in a separate properties object during the connection.
    </para>
    <para/>
    
    <sect2>
      <title>Federate Embedded Deployment Configuration properties</title>
      <para> These properties control Federate Embedded deployment</para>
      <table frame="all">
        <title>Federate Embedded deployment configuration properties</title>
        <tgroup cols='4' align='left' colsep='1' rowsep='1'>
          <colspec colname='c1' colwidth="1*"/>
          <colspec colname='c2' colwidth="2*"/>
          <colspec colname='c3' colwidth="1*"/>
          <colspec colname='c4' colwidth="1*"/>
          <thead>      
            <row>
              <entry>
                <para>Property</para>
              </entry>
              <entry>
                <para>Description</para>
              </entry>
              <entry>
                <para>Type</para>
              </entry>
              <entry>
                <para>Default</para>
              </entry>
            </row>
          </thead>        
          <tbody>
           <row>
              <entry>
                <para>dqp.configFile</para>
              </entry>
              <entry>
                <para>The path to the file containing
                  the MetaMatrix Query configuration file, containing
                  system properties, shared connector types, and shared
                  connector bindings.</para>
              </entry>
              <entry>
                <para>string</para>
              </entry>
              <entry>
                <para> ./config/config.xml</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>dqp.metadata.systemURL
                </para>
              </entry>
              <entry>
                <para>The path to the VDB containing
                  system metadata.</para>
              </entry>
              <entry>
                <para>string</para>
              </entry>
              <entry>
                <para>./lib/System.vdb</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>vdb.definition</para>
              </entry>
              <entry>
                <para>The path to the folder
                  containing .vdb files (standard usage). Alternatively,
                  a single VDB can be specified.</para>
              </entry>
              <entry>
                <para>string</para>
              </entry>
              <entry>
                <para>./config</para>
              </entry>
            </row>
           <row>
              <entry>
                <para>dqp.classpath</para>
              </entry>
              <entry>
                <para>Classpath to be used to load MM Query
                  into a separate class loader. If the user wants MM
                  Query to be loaded in their application's classloader,
                  this property must be removed or commented out.</para>
              </entry>
              <entry>
                <para>string</para>
              </entry>
              <entry>
                <para>./lib/; ./license/; ./lib/mmquery.jar;
                </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>dqp.extensions</para>
              </entry>
              <entry>
                <para>The path to the folder where extension JARs are
                  located. Use of this property is an implicit
                  declaration that each Connector Binding has its own
                  classloader. If the user wants each Connector Binding
                  loaded from the same classloader, this property must
                  be removed or commented out.</para>
              </entry>
              <entry>
                <para>string</para>
              </entry>
              <entry>
                <para>./extensions</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>dqp.logFile</para>
              </entry>
              <entry>
                <para>The path to the file that logging messages will
                  be written to. The special keyword stdout can be used
                  to re-direct logging to standard output. If this
                  property is not defined, no logging will occur.</para>
              </entry>
              <entry>
                <para>string</para>
              </entry>
              <entry>
                <para>./logs/query.log</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>dqp.logLevel</para>
              </entry>
              <entry>
                <para>
                  The logging level. See System logging for more information. If not specified, a logging
                  level of "3" will be used.
                </para>
              </entry>
              <entry>
                <para>integer</para>
              </entry>
              <entry>
                <para>4 (INFO)</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>dqp.userDefinedFunctionsFile
                </para>
              </entry>
              <entry>
                <para>The path to the file containing the
                  user-defined function definitions.</para>
              </entry>
              <entry>
                <para>string</para>
              </entry>
              <entry>
                <para>./config/FunctionDefinitions.xmi
                </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>dqp.userDefinedFunctionsClasspath
                </para>
              </entry>
              <entry>
                <para>Classpath for the UDF jars. These jars
                  must contain all code necessary to execute the
                  user-defined function methods.</para>
              </entry>
              <entry>
                <para>string</para>
              </entry>
              <entry>
                <para />
              </entry>
            </row>          
          </tbody>
        </tgroup>
      </table>    
    </sect2>
    
    <para/>
    
    <sect2>
      <title>Processor Properties</title>
      <para> These properties control query processing.</para>
      <table frame="all">
        <title>Processor Properties</title>
        <tgroup cols='4' align='left' colsep='1' rowsep='1'>
          <colspec colname='c1' colwidth="1*"/>
          <colspec colname='c2' colwidth="2*"/>
          <colspec colname='c3' colwidth="1*"/>
          <colspec colname='c4' colwidth="1*"/>
          <thead>      
            <row>
              <entry>
                <para>Property</para>
              </entry>
              <entry>
                <para>Description</para>
              </entry>
              <entry>
                <para>Type</para>
              </entry>
              <entry>
                <para>Default</para>
              </entry>
            </row>
          </thead>        
          <tbody>
            <row>
              <entry>
                <para>ProcessPoolMaxThreads</para>
              </entry>
              <entry>
                <para>Process pool maximum thread count.</para>
              </entry>
              <entry>
                <para>integer</para>
              </entry>
              <entry>
                <para>64</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ProcessPoolThreadTTL</para>
              </entry>
              <entry>
                <para>The maximum length of time a processor pool thread may live in idle state, in milliseconds.</para>
              </entry>
              <entry>
                <para>integer - millisec</para>
              </entry>
              <entry>
                <para>120000</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ProcessorTimeslice</para>
              </entry>
              <entry>
                <para>Query processor time slice, in milliseconds.
                </para>
              </entry>
              <entry>
                <para>integer - millisec</para>
              </entry>
              <entry>
                <para>2000</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>MinFetchSize</para>
              </entry>
              <entry>
                <para>Minimum allowed fetch size, set via JDBC. User requested value ignored below this value.</para>
              </entry>
              <entry>
                <para>integer</para>
              </entry>
              <entry>
                <para>100</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>MaxFetchSize</para>
              </entry>
              <entry>
                <para>Maximum allowed fetch size, set via JDBC. User requested value ignored above this value.</para>
              </entry>
              <entry>
                <para>integer</para>
              </entry>
              <entry>
                <para>20000</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>MaxPlanCacheSize</para>
              </entry>
              <entry>
                <para>The maximum number of query plans that are
                  cached.</para>
              </entry>
              <entry>
                <para>integer</para>
              </entry>
              <entry>
                <para>100</para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </sect2>
    <para/>
    <sect2>
      <title>Buffer Manager Properties</title>
      <para>These properties are related to the buffer manager. All these properties begin with the prefix "dqp.buffer".</para>
      <table frame="all">
        <title>Buffer Manager Properties</title>
        <tgroup cols='4' align='left' colsep='1' rowsep='1'>
          <colspec colname='c1' colwidth="1*"/>
          <colspec colname='c2' colwidth="2*"/>
          <colspec colname='c3' colwidth="1*"/>
          <colspec colname='c4' colwidth="1*"/>
          <thead>      
            <row>
              <entry>
                <para>Property</para>
              </entry>
              <entry>
                <para>Description</para>
              </entry>
              <entry>
                <para>Type</para>
              </entry>
              <entry>
                <para>Default</para>
              </entry>
            </row>
          </thead>        
          <tbody>
            <row>
              <entry>
                <para>connectorBatchSize</para>
              </entry>
              <entry>
                <para>The max size of a batch sent between connector and query service. Should be even multiple of processorBatchSize.</para>
              </entry>
              <entry>
                <para>integer</para>
              </entry>
              <entry>
                <para>2000</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>processorBatchSize</para>
              </entry>
              <entry>
                <para>The max size of a batch sent internally within the query processor. Should be &lt;= the connectorBatchSize.</para>
              </entry>
              <entry>
                <para>integer</para>
              </entry>
              <entry>
                <para>2000</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>useDisk</para>
              </entry>
              <entry>
                <para>Defines whether to use disk buffering or not.</para>
              </entry>
              <entry>
                <para>boolean</para>
              </entry>
              <entry>
                <para>true</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>dir</para>
              </entry>
              <entry>
                <para>The location to store temporary buffers too large to fit
                  in memory. If this is not defined, the user's temp directory
                  will be used.</para>
              </entry>
              <entry>
                <para>string</para>
              </entry>
              <entry>
                <para>./buffer</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>memory</para>
              </entry>
              <entry>
                <para>The numeric memory size in MB, to be used before disk buffering kicks in</para>
              </entry>
              <entry>
                <para>integer - MB</para>
              </entry>
              <entry>
                <para>64</para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </sect2>
    <sect2>
      <title>Caching Properties</title>
      <para>These properties control caching in the Federate query engine.</para>
      
      <table frame="all">
        <title>Caching Properties</title>
        <tgroup cols='4' align='left' colsep='1' rowsep='1'>
          <colspec colname='c1' colwidth="1*"/>
          <colspec colname='c2' colwidth="2*"/>
          <colspec colname='c3' colwidth="1*"/>
          <colspec colname='c4' colwidth="1*"/>
          <thead>      
            <row>
              <entry>
                <para>Property</para>
              </entry>
              <entry>
                <para>Description</para>
              </entry>
              <entry>
                <para>Type</para>
              </entry>
              <entry>
                <para>Default</para>
              </entry>
            </row>
          </thead>      
          <tbody>
            <row>
              <entry>
                <para>MaxCodeTables</para>
              </entry>
              <entry>
                <para>Maximum number of cached code tables.</para>
              </entry>
              <entry>
                <para>integer</para>
              </entry>
              <entry>
                <para>50</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>MaxCodeTableRecords</para>
              </entry>
              <entry>
                <para>Maximum number of records in ALL code tables,combined.</para>
              </entry>
              <entry>
                <para>integer</para>
              </entry>
              <entry>
                <para>10000</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ResultSetCacheEnabled</para>
              </entry>
              <entry>
                <para>Denotes whether or not result set caching is enabled.</para>
              </entry>
              <entry>
                <para>integer</para>
              </entry>
              <entry>
                <para>0 (not enabled)</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ResultSetCacheSize</para>
              </entry>
              <entry>
                <para>The maximum size the result set cache will be allowed to grow to before objects are removed.</para>
              </entry>
              <entry>
                <para>integer - MB</para>
              </entry>
              <entry>
                <para>0 (no limit)</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ResultSetCacheMaxAge</para>
              </entry>
              <entry>
                <para>The maximum time a result set will be kept in cache before being automatically cleared.</para>
              </entry>
              <entry>
                <para>integer - millisec</para>
              </entry>
              <entry>
                <para>0 (no limit)</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ResultSetCacheScope</para>
              </entry>
              <entry>
                <para>Defines whether caching is restricted to a specific session (‘session’) or a specific VDB version (‘vdb’).</para>
              </entry>
              <entry>
                <para>string</para>
              </entry>
              <entry>
                <para>vdb</para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </sect2>
  </sect1>  
  
</chapter>