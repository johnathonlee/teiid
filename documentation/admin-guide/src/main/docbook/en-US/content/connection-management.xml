<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter id="connection_management">
  <title>Connection Management</title>
  <sect1>
    <title>Default Connection Properties</title>
    <para>The file "connection.properties" in the installation directory of the AdminShell defines the default
      connection properties with which user can connect to Teiid system. The following properties can be
      defined using this file</para>
    <programlisting><![CDATA[
admin.url = <server host name or ip address>
admin.name = <user name>
admin.password = <password>

jdbc.url = <server host name or ip address>
jdbc.user = <user name>
jdbc.password = <password>
      ]]></programlisting>
    <para>A call to "connect()" or "connectionAsAdmin()" without any input parameters, will connect to
      the Teiid system using the properties defined in properties file. However, a user can always pass in
      parameters in the connect method to connect to a same or different server than one mentioned in the
      “connection.properties”.  Look all the all the different connect methods using the “adminHelp()” method.  </para>
    <para>Note that it is not secure to leave the passwords in clear text, as defined above. Please take
      necessary measures to secure the properties file, or do not use this feature and always pass in password
      interactively or some other secure way.</para>
    <para>Note: At any given time user can be actively connected to more than one system or have more than one
      connection to same system.  To manage the connections correctly each connection is created given a unique
      connection name. To learn more about this look at <link linkend="mutiple_connections">Handling Multiple Connections</link>.</para>
    <para />
  </sect1>
  <sect1 id="mutiple_connections">
    <title>Handling Multiple Connections</title>
    <para>Using AdminShell, a user can actively manage more than one connection to a single or multiple Teiid
      systems. For example, two separate connections can be maintained, one to the development server and one to
      the integration server at the same time. This is possible because AdminShell supports a feature called named
      connections.</para>
    <para>Every time a connection is made, the connection has an explicit or an implicitly assigned name.  
      If another connect command is executed then a new
      connection is made with a unique name and execution will be switched to use the new connection.  
      The previous connection will be held as it is in its current state, and will not be closed.</para>
    <para />
    <para>In the interactive mode the name of the connection can found in the command prompt.  Also, you could
      use the following command in the interactive and script mode to find out the current connection's name</para>
    <programlisting><![CDATA[
name = getConnectionName();    
      ]]></programlisting>
    <para>Knowing the names of the connection that user is working with is important to switch the active connection to a previous connection.  
    To switch the active connection, use the following command and supply the name of the connection to be used</para>
    <para />
    <programlisting><![CDATA[
useConnection("name");    
      ]]></programlisting>
    <para>If user supplies the same name as the active connection as they are currently participating in, then
      this operation will simply return with out any modifications. There is no limitation the number of
      simultaneous connections.</para>
    <para />
    <para>The following shows an example of using and switching between two connections.</para>
    <programlisting><![CDATA[
// creates a connection 
connectAsAdmin();	        	

//capture the connection name
conn1 = getConnectionName();

deployVDB("file.vdb")

// creates a second connection 
connectAsAdmin();		

conn2 = getConnectionName();

deployVDB("file.vdb")

// switch the connection to "conn1"
useConnection(conn1);	

// close the connection in the "conn1"
disconnectAll();
      ]]></programlisting>
  </sect1>
</chapter>