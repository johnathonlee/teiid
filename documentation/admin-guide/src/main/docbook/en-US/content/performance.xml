<!-- 
TODO: incorporate a performance chapter.

The information about document materialization belongs in the reference though.  And is not completely correct
w.r.t. the use of document projection.

        <para>Your application can use a statement object to execute queries that return XML documents.  
        The query must specify a valid document in VDB, or should have used SQL XML functions 
        to create a XMl document.</para>
        <section>
            <title>XML Streaming</title>
            <para>XML documents are streamed from Teiid Server to the Teiid JDBC API.   
            Normally, the document never materializes in the server memory, avoiding potential 
            out-of-memory issues and improving the first response time for large documents. 
            When using style sheets, or XQuery, the whole document 
            must be materialized on the server.  Therefore memory issues may occur for large documents. 
            A result document can be obtained from the JDBC resultset using <code>getSQLXML</code> method.
            </para>
            <para>The document is broken into pieces when being created and streamed.  
            The maximum size of each piece in the stream can be configured with the 
            <code>"lobChunkSizeInKB"</code> system property on the Server. The default value is 100 KB.  
            At any given time, this is the maximum amount of memory that can be held by a particular 
            XML query against the system.  In heavily loaded or memory-constrained scenarios, 
            this value can decrease the amount of memory used.  As a side effect, streaming will occur in smaller pieces, reducing initial document response time while 
            increasing full response time (as this is less efficient).</para>
        </section>
        
 -->