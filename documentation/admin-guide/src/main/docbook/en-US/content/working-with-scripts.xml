<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter id="working_with_scripts">
  <title>Working with Scripts</title>
  <sect1>
    <title>Executing script file in interactive mode</title>
    <para>To execute a script file "foo.groovy" in a directory "some/directory" in the shell tool, execute as
      following</para>
    <programlisting><![CDATA[
. some/directory/foo.groovy
    ]]></programlisting>
    <para>"foo.groovy" is read into current context of the shell as if you typed in the whole document. If
      your script only contained method calls, you can explicitly invoke the call to execute.</para>
    <para>Full execute syntax may also be used, and is required outside of the Shell tool:</para>
    <programlisting><![CDATA[
evaluate("some/directory/foo.groovy" as File)
    ]]></programlisting>
  </sect1>
  <sect1>
    <title>Executing script file in non-interactive mode</title>
    <para>To execute a script file "foo.groovy" in a directory "some/directory" in non-interactive mode, execute as
      following command at the command prompt</para>
    <programlisting><![CDATA[
adminshell.sh . some/directory/foo.groovy
    ]]></programlisting>
    <para>Parameters can be passed in as Java System properties. For example</para>
    <programlisting><![CDATA[
adminshell.sh -Dparam=value . some/directory/foo.groovy
    ]]></programlisting>
    <para>Inside the script file, you can access these properties using System.getProperty</para>
    <programlisting><![CDATA[
value = System.getProperty(“param”); // will return "value"
    ]]></programlisting>
  </sect1>
  <sect1>
    <title>Log File and Recorded Script file</title>
    <para>During the interactive mode, input is recorded in a history file. This file can be accessed via the up arrow in the interactive shell.
    </para>
    <para>User can also capture the commands entered during a interactive session to their own script file by
      using “startRecording” and “stopRecording” commands. For example,</para>
    <para />
    <programlisting><![CDATA[
record start directory/filename.txt
<commands and script ..>
record stop    
    ]]></programlisting>
    <para>All input and output between the start and stop are captured in the “directory/filename.txt” file. 
      This gives the user an option to capture only certain portions of the interactive session and to later refine a script out of recorded file.</para>
    <para />
  </sect1>
</chapter>