<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter id="custom_security">
	<title>Teiid Security</title>
	<para>The Teiid system provides a range of built-in and extensible security features to enable the
		secure access of data.</para>
	<section>
		<title>Authentication</title>
		<para>JDBC clients may use simple passwords to authenticate a user.</para>
		<para>Typically a user name is required, however user names may be considered optional if the
			identity of the user can be discerned by the password credential alone.  In
			any case it is up to the configured security domain to determine whether a user can be
			authenticated. If you need authentication, the administrator must configure a LoginModule to be used with Teiid. 
            See below for more information on how configure the Login module in JBoss AS.</para>
			
			<note><para>By default, access to Teiid is NOT secure. The default login modules are only 
	        backed by file based authentication, which has a well known user 
	        name and password.
	        The same is true for making connections to the Admin Console application. 
	        We DO NOT recommend leaving the default security profile as defined when you 
	        are exposing sensitive data.</para></note>
            <section>
                <title>Pass-through Authentication</title>
                <para>If your client application (web application or Web service) resides in the same JBoss AS instance as Teiid and 
                client application uses a security-domain to handle the security concerns, then you can configure Teiid to use the 
                same security-domain and not force the user to re-authenticate for using Teiid. In this case Teiid looks for a authenticated 
                subject in the calling thread context and uses for its session and authorization purposes. To configure Teiid for this
                pass-through authentication mechanism, you need change the Teiid's security-domain name to same name as your 
                application's security domain name in the "teiid-jboss-beans.xml" file in the SessionService section. 
                Please note that for this to work, the security-domain 
                must be a JAAS based Login Module and your client application MUST obtain Teiid connection 
                using <emphasis>Local</emphasis> Connection.</para>
            </section>
	</section>
	<section>
		<title>Authorization</title>
		<para>Authorization covers both administrative activities and data
			roles.  A data role is a collection of permissions (also referred to as entitlements) and a
			collection of entitled principals or groups. With the deployment of a VDB
			the deployer can choose which principals and groups have which data roles.</para>
	</section>
	<section>
		<title>Encryption</title>
		<para>At a transport level Teiid provides built-in support for JDBC
			over SSL or just sensitive message encryption when SSL is not in use.
		</para>
		<para>
			Passwords in configuration files however are by default stored in
			plain text. If you need these values to be encrypted, please see
			<ulink
				url="http://community.jboss.org/wiki/maskingpasswordsinjbossasxmlconfiguration">encrypting passwords</ulink>
			for instructions on encryption facilities provided by the container.
		</para>
	</section>
	<section>
		<title>LoginModules</title>
		<para>
			LoginModules are an essential part of the JAAS security
			framework and provide Teiid customizable user authentication and the
			ability to reuse existing LoginModules defined for JBossAS. See
			<ulink
				url="http://docs.jboss.org/jbossas/admindevel326/html/ch8.chapter.html">JBossAS Security</ulink>
			for general information on configuring security in JBossAS.</para>
		<para>
			Teiid can be configured with multiple named application policies
			that group together relevant LoginModules. Each of these application
			policy (or domains) names can be used to fully
			qualify user names to
			authenticate only against that domain.  The format for a qualified
			name is username@domainname.
		</para>
		<para>If a user name is not fully qualified, then the installed
			domains will be consulted in order until a domain
			successfully or unsuccessfully authenticates the
			user.
		</para>
		<para>If no domain can authenticate the user, the logon
			attempt will fail.
			Details of the failed attempt including invalid users, which
			domains were consulted, etc. will be in the server log with appropriate
			levels of severity.</para>
			    <note>
        <para>The security-domain defined for the JDBC connection and Admin connections are separate.
            The default name of JDBC connection's security-domain is "teiid-security". The default name for Admin connection
            is "jmx-console". For the Admin connection's security domain, the user is allowed 
            to change which LoginModule that "jmx-console" pointing to, however should not change the name of the domain, as this name is
            shared between the "admin-console" application.</para>
    </note>    
			
		<section>
			<title>Built-in LoginModules</title>
			<para>JBossAS provides several LoginModules for common authentication needs, such as authenticating from text files or LDAP.</para>
			<para>The UsersRolesLoginModule, which utilizes simple text files
				to authenticate users and to define
				their groups.  The teiid-jboss-beans.xml configuration file contains an example of how to use UsersRolesLoginModule.  
				Note that this is typically not for production use.
	        </para>
	        <para>See <ulink url="http://community.jboss.org/docs/DOC-11253">LDAP LoginModule configuration</ulink> for utilizing LDAP based authentication.
            If you want use a your own Custom Login module, check out the Developer's Guide for instructions.
	        </para>
		</section>
		
	</section>
	
	<section id="connfigure_server">
        <title>Configuring SSL</title>
        <para>The Teiid's configuration file 
        <code>&lt;jboss-install&gt;/server/&lt;profile&gt;/deploy/teiid/teiid-jboss-beans.xml</code>, 
        contains the properties to configure SSL.</para>
        <itemizedlist>
        	<para>There are two separate connection profiles:</para>
            <listitem><para>JDBC Connection - The <code>JdbcSslConfiguration</code> bean configuration defines this.</para></listitem>
            <listitem><para>Admin Connection - The <code>AdminSslConfiguration</code> bean configuration defines this.</para></listitem>
        </itemizedlist>
        <example><title>Example Configuration</title>
	    <programlisting><![CDATA[<bean name="JdbcSslConfiguration" class="org.teiid.transport.SSLConfiguration">
    <property name="sslEnabled">false</property>
    <property name="keystoreFilename">cert.keystore</property>
    <property name="keystorePassword">passwd</property>
    <property name="keystoreType">JKS</property>
    <property name="sslProtocol">SSLv3</property>
    <property name="keymanagementAlgorithm">false</property>
    <property name="truststoreFilename">cert.truststore</property>
    <property name="truststorePassword">passwd</property>
    <!--  1-way, 2-way, anonymous -->
    <property name="authenticationMode">1-way</property>
    <property name="clientEncryptionEnabled">true</property>
</bean>]]></programlisting>       
</example>
           <orderedlist>
           	<title>Properties</title>
            <listitem><para>sslEnabled - true|false, SSL usage either turned ON or OFF </para></listitem>
            <listitem><para>sslProtocol- Type of SSL protocol to be used. Default is SSLv3</para></listitem>
            <listitem><para>keystoreType - Keystore type created by the keytool. Default "JKS" is used.</para></listitem>
            <listitem><para>authenticationMode - anonymous|1-way|2-way,  Type of SSL mode, see  
            above about different <link linkend="ssl_modes">SSL modes</link> available.</para></listitem>
            <listitem><para>keymanagementAlgorithm - Type of key algorithm used. Default 
            is based upon the VM, e.g. "SunX509"</para></listitem>
            <listitem><para>keystoreFilename - The file name of the keystore, which contains the 
            private key of the Server. This must be available in the classpath of Teiid Server</para></listitem>
            <listitem><para>keystorePassword - password for the keystore.</para></listitem>
            <listitem><para>truststoreFilename - if "authenticationMode" is chosen 
            as "2-way", then this property must be provided. This is the truststore that contains the 
            public key for the client. Depending upon how you created the keystore and truststores, 
            this may be same file as defined under  "keystoreFilename" property.</para></listitem>
            <listitem><para>truststorePassword - password for the truststore. </para></listitem>
           </orderedlist>  
           
    </section>
</chapter>