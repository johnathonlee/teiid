<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % CustomDTD SYSTEM "../../../../../../docbook/custom.dtd">
%CustomDTD;
]>
<chapter id="logging">
	<title>Logging</title>
	<sect1 id="custom_logging">
		<title>Customized Logging</title>
		<para>
			The Teiid system provides a wealth of information via logging. To
			control logging level, contexts, and log locations, you should be
			familiar with
			<ulink url="http://logging.apache.org/log4j/">log4j</ulink>
			and the container's jboss-log4j.xml configuration file.  
			Teiid also provides a &lt;profile&gt;/conf/jboss-teiid-log4j.xml containing much of information from chapter.
            Check out Admin Guide for more details about different Teiid contexts available.
		</para>
		
        <para>
			If the default log4j logging mechanisms are not sufficient for your
			logging needs you may need a different appender - see
			<ulink url="http://logging.apache.org/log4j/1.2/apidocs/index.html">the log4j javadocs</ulink>. 
            Note that log4j already provides quite a few appenders including JMS, RDBMS, and SMTP.
		</para>
		<para>If you want a custom appender, follow the Log4J directions to write a custom appender. See instructions 
        <ulink url="http://logging.apache.org/log4net/release/faq.html">here</ulink>. If you develop a custom 
            logging solution, the implementation jar should be placed in the "lib" directory of the JBoss AS server profile
			Teiid is installed in.
    	</para>
        
        <sect2>
            <title>Command Logging API</title>
            <para>
                If you want to build a custom appender for command logging that will have access to 
                log4j "LoggingEvents" to the "COMMAND_LOG" context, it will have a message that is an instance of
                <code>org.teiid.logging.CommandLogMessage</code> defined in the <code>teiid-api-&versionNumber;.jar</code> 
                use these class in your development. The CommmdLogMessage include information about vdb, session, command-sql etc.
            </para>
        </sect2>
        
        <sect2 id="audit_logging">
            <title>Audit Logging API</title>
            <para>If you want to build a custom appender for command logging that will have access to 
                log4j "LoggingEvents" to the "AUDIT_LOG" context, it will have a message that is an instance of
                <code>org.teiid.logging.AuditMessage</code> defined in the <code>teiid-api-&versionNumber;.jar</code> 
                use this class in your development. AuditMessage include  information about user, the action, and the
                target(s) of the action.</para>                            
        </sect2>
	</sect1>
</chapter>