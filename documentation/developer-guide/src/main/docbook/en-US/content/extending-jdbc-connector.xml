<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter id="extendingjdbc">
  <title>Extending the JDBC Connector</title>
  <para>The JDBC Connector can be extended to handle new JDBC drivers and database versions.  This chapter 
  outlines the process by which a user can modify the behavior of the JDBC Connector for a new source</para>
 
 
  <sect1>
    <title>Extension Interfaces</title>
    <para>To design JDBC Translator for any RDMS that are not already provided by the Teiid, extend the 
    <emphasis>org.teiid.translator.jdbc.JDBCExecutionFactory</emphasis> class in the "translator-jdbc" module. There 
    are three types of methods that you can override from the base class to define the behavior of the Translator.</para>

      <table frame='all'>
        <title>Extension methods</title>
        <tgroup cols='2' align='left' colsep='1' rowsep='1'>
          <colspec colname='c1' colwidth="1*"/>
          <colspec colname='c2' colwidth="2*"/>
          <thead>      
            <row>
              <entry><para>Extension</para></entry>
              <entry><para>Purpose</para></entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry><para>Translator Capabilities</para></entry>
              <entry><para>Specify the SQL syntax and functions the source supports.</para></entry>
            </row>
            <row>
              <entry><para>SQL Translator</para></entry>
              <entry><para>Customize what SQL syntax is used, how source-specific functions are supported, how procedures are executed.</para></entry>
            </row>
            <row>
              <entry><para>Results Translator</para></entry>
              <entry><para>Customize how results are retrieved from JDBC and translated.</para></entry>
            </row>            
          </tbody>
        </tgroup>
      </table>
      
      <sect2>
        <title>Translator Capabilities Extension</title>
        <para>This extension must override the methods that begin with "supports" that describe translator capabilities.
        For all the available translator capabilities please see <link linkend="translator_capabilities">this</link>.</para>
        
        <para>The most common example is adding 
        support for a scalar function – this requires both declaring that the translator has the capability 
        to execute the function and often modifying the SQL Translator to translate the function appropriately for the source.</para>
        <para>Another common example is turning off unsupported SQL capabilities (such as outer joins or subqueries) 
        for less sophisticated JDBC sources. </para>        
      </sect2>

      <sect2>
        <title>SQL Translation Extension</title>
        <para>It provides ways to modify the command entering the JDBC Connector (in object form) before it is sent to the 
         JDBC driver (as an SQL string).</para>
        
        <para>Common functions that the SQLTranslator can perform are:</para>
        
        <orderedlist>
          <listitem>
            <para>Arbitrarily modify the object form of a command before translation </para>
          </listitem>
          <listitem>
            <para>Register one or more “function modifiers” that define how a scalar function should be modified or transformed</para>
          </listitem>
          <listitem>
            <para>Change the way SQL strings are formed from the object for m of a command</para>
          </listitem>
      </orderedlist>
      <para>For more information on how these functions can be performed, see the examples later in this chapter.</para>
      </sect2>
      
      <sect2>
        <title>Results Translation Extension</title>
        <para>This defines ways to modify the results 
        as they are read and returned from the JDBC driver to the Teiid Server.  Common functions that the 
        ResultsTranslator can perform are:</para>
        <orderedlist>
          <listitem>
            <para>Execute a stored procedure against the driver</para>
          </listitem>
          <listitem>
            <para>Execute a prepared statement with large objects against the driver</para>
          </listitem>
          <listitem>
            <para>Execute a statement for bulk insert</para>
          </listitem>
          <listitem>
            <para>Retrieve values from the JDBC ResultSet</para>
          </listitem>
          <listitem>
            <para>Translate values returned from JDBC into the types expected by MetaMatrix</para>
          </listitem>     
          <listitem>
            <para>Arbitrarily modify a batch of results</para>
          </listitem>                          
      </orderedlist>       
      
      <para>For more information on how these functions can be performed, see the examples later in this chapter.</para> 
      </sect2>
  </sect1>
  
  <sect1>
    <title>Developing Extensions</title>
    <para>When developing a new JDBC Translator extension, you should start with the development environment used to develop 
    any translator, as defined in the Translator Developer’s Guide.</para>
  </sect1>
  
  <sect1>
    <title>Installing Extensions</title>
    <para>Once you have developed an extension to the JDBC translator, you must install it into the Teiid Server. 
    The process of <link linkend="translator_package">packaging</link> or <link linkend="translator_deploy">deploying</link> the 
    extended JDBC translators is exactly as any other other translator. Since the RDMS is accessible already through its JDBC
    driver, there is no need to develop a resource adapter for this source as JBoss AS provides a wrapper JCA connector (DataSource)
    for any JDBC driver. 
     </para>
     </sect1>
</chapter>