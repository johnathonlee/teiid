<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE appendix PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<appendix id="grammar">
  <title>BNF for SQL Grammar</title>
  <sect1 remap="h2">
    <title>TOKENS</title>
    <informaltable frame="none">
      <tgroup cols="1">
        <colspec colname="c1" colwidth="100*"/>
        <!-- Token -->
        <tbody>
          <row>
            <entry><para>
&lt;DEFAULT&gt; SKIP : {
&quot; &quot;
| &quot;\t&quot;
| &quot;\n&quot;
| &quot;\r&quot;
}

   </para></entry>
          </row>
          <!-- Token -->
          <row>
            <entry><para>
&lt;DEFAULT&gt; MORE : {
&quot;/*&quot; : IN_MULTI_LINE_COMMENT
}

   </para></entry>
          </row>
          <!-- Token -->
          <row>
            <entry><para>
&lt;IN_MULTI_LINE_COMMENT&gt; SPECIAL : {
&lt;MULTI_LINE_COMMENT: &quot;*/&quot;&gt; : DEFAULT
}

   </para></entry>
          </row>
          <!-- Token -->
          <row>
            <entry><para>
&lt;IN_MULTI_LINE_COMMENT&gt; MORE : {
&lt;~[]&gt;
}

   </para></entry>
          </row>
          <!-- Token -->
          <row>
            <entry><para>
&lt;DEFAULT&gt; TOKEN : {
&lt;STRING: &quot;string&quot;&gt;
| &lt;BOOLEAN: &quot;boolean&quot;&gt;
| &lt;BYTE: &quot;byte&quot;&gt;
| &lt;SHORT: &quot;short&quot;&gt;
| &lt;CHAR: &quot;char&quot;&gt;
| &lt;INTEGER: &quot;integer&quot;&gt;
| &lt;LONG: &quot;long&quot;&gt;
| &lt;BIGINTEGER: &quot;biginteger&quot;&gt;
| &lt;FLOAT: &quot;float&quot;&gt;
| &lt;DOUBLE: &quot;double&quot;&gt;
| &lt;BIGDECIMAL: &quot;bigdecimal&quot;&gt;
| &lt;DATE: &quot;date&quot;&gt;
| &lt;TIME: &quot;time&quot;&gt;
| &lt;TIMESTAMP: &quot;timestamp&quot;&gt;
| &lt;OBJECT: &quot;object&quot;&gt;
| &lt;BLOB: &quot;blob&quot;&gt;
| &lt;CLOB: &quot;clob&quot;&gt;
| &lt;XML: &quot;xml&quot;&gt;
}

   </para></entry>
          </row>
          <!-- Token -->
          <row>
            <entry><para>
&lt;DEFAULT&gt; TOKEN : {
&lt;CAST: &quot;cast&quot;&gt;
| &lt;CONVERT: &quot;convert&quot;&gt;
| &lt;TIMESTAMPADD: &quot;timestampadd&quot;&gt;
| &lt;TIMESTAMPDIFF: &quot;timestampdiff&quot;&gt;
| &lt;COUNT: &quot;count&quot;&gt;
| &lt;SUM: &quot;sum&quot;&gt;
| &lt;AVG: &quot;avg&quot;&gt;
| &lt;MIN: &quot;min&quot;&gt;
| &lt;MAX: &quot;max&quot;&gt;
}

   </para></entry>
          </row>
          <!-- Token -->
          <row>
            <entry><para>
&lt;DEFAULT&gt; TOKEN : {
&lt;ALL: &quot;all&quot;&gt;
| &lt;AND: &quot;and&quot;&gt;
| &lt;ANY: &quot;any&quot;&gt;
| &lt;AS: &quot;as&quot;&gt;
| &lt;ASC: &quot;asc&quot;&gt;
| &lt;BEGIN: &quot;begin&quot;&gt;
| &lt;BETWEEN: &quot;between&quot;&gt;
| &lt;BREAK: &quot;break&quot;&gt;
| &lt;BY: &quot;by&quot;&gt;
| &lt;CASE: &quot;case&quot;&gt;
| &lt;CONTINUE: &quot;continue&quot;&gt;
| &lt;CREATE: &quot;create&quot;&gt;
| &lt;CRITERIA: &quot;criteria&quot;&gt;
| &lt;CROSS: &quot;cross&quot;&gt;
| &lt;DEBUG: &quot;debug&quot;&gt;
| &lt;DECLARE: &quot;declare&quot;&gt;
| &lt;DELETE: &quot;delete&quot;&gt;
| &lt;DESC: &quot;desc&quot;&gt;
| &lt;DISTINCT: &quot;distinct&quot;&gt;
| &lt;DROP: &quot;drop&quot;&gt;
| &lt;ELSE: &quot;else&quot;&gt;
| &lt;END: &quot;end&quot;&gt;
| &lt;ERROR: &quot;error&quot;&gt;
| &lt;ESCAPE: &quot;escape&quot;&gt;
| &lt;EXCEPT: &quot;except&quot;&gt;
| &lt;EXEC: &quot;exec&quot;&gt;
| &lt;EXECUTE: &quot;execute&quot;&gt;
| &lt;EXISTS: &quot;exists&quot;&gt;
| &lt;FALSE: &quot;false&quot;&gt;
| &lt;FN: &quot;fn&quot;&gt;
| &lt;FOR: &quot;for&quot;&gt;
| &lt;FROM: &quot;from&quot;&gt;
| &lt;FULL: &quot;full&quot;&gt;
| &lt;GROUP: &quot;group&quot;&gt;
| &lt;HAS: &quot;has&quot;&gt;
| &lt;HAVING: &quot;having&quot;&gt;
| &lt;IF: &quot;if&quot;&gt;
| &lt;IN: &quot;in&quot;&gt;
| &lt;INNER: &quot;inner&quot;&gt;
| &lt;INSERT: &quot;insert&quot;&gt;
| &lt;INTERSECT: &quot;intersect&quot;&gt;
| &lt;INTO: &quot;into&quot;&gt;
| &lt;IS: &quot;is&quot;&gt;
| &lt;JOIN: &quot;join&quot;&gt;
| &lt;LEFT: &quot;left&quot;&gt;
| &lt;LIKE: &quot;like&quot;&gt;
| &lt;LIMIT: &quot;limit&quot;&gt;
| &lt;LOCAL: &quot;local&quot;&gt;
| &lt;LOOP: &quot;loop&quot;&gt;
| &lt;MAKEDEP: &quot;makedep&quot;&gt;
| &lt;MAKENOTDEP: &quot;makenotdep&quot;&gt;
| &lt;NOCACHE: &quot;nocache&quot;&gt;
| &lt;NOT: &quot;not&quot;&gt;
| &lt;NULL: &quot;null&quot;&gt;
| &lt;ON: &quot;on&quot;&gt;
| &lt;OJ: &quot;oj&quot;&gt;
| &lt;OPTION: &quot;option&quot;&gt;
| &lt;OR: &quot;or&quot;&gt;
| &lt;ORDER: &quot;order&quot;&gt;
| &lt;OUTER: &quot;outer&quot;&gt;
| &lt;PLANONLY: &quot;planonly&quot;&gt;
| &lt;PROCEDURE: &quot;procedure&quot;&gt;
| &lt;RIGHT: &quot;right&quot;&gt;
| &lt;SELECT: &quot;select&quot;&gt;
| &lt;SET: &quot;set&quot;&gt;
| &lt;SHOWPLAN: &quot;showplan&quot;&gt;
| &lt;SOME: &quot;some&quot;&gt;
| &lt;TABLE: &quot;table&quot;&gt;
| &lt;TEMPORARY: &quot;temporary&quot;&gt;
| &lt;THEN: &quot;then&quot;&gt;
| &lt;TRANSLATE: &quot;translate&quot;&gt;
| &lt;TRUE: &quot;true&quot;&gt;
| &lt;UNION: &quot;union&quot;&gt;
| &lt;UNKNOWN: &quot;unknown&quot;&gt;
| &lt;UPDATE: &quot;update&quot;&gt;
| &lt;USING: &quot;using&quot;&gt;
| &lt;VALUES: &quot;values&quot;&gt;
| &lt;VIRTUAL: &quot;virtual&quot;&gt;
| &lt;WHEN: &quot;when&quot;&gt;
| &lt;WHERE: &quot;where&quot;&gt;
| &lt;WITH: &quot;with&quot;&gt;
| &lt;WHILE: &quot;while&quot;&gt;
}

   </para></entry>
          </row>
          <!-- Token -->
          <row>
            <entry><para>
&lt;DEFAULT&gt; TOKEN : {
&lt;SQL_TSI_FRAC_SECOND: &quot;SQL_TSI_FRAC_SECOND&quot;&gt;
| &lt;SQL_TSI_SECOND: &quot;SQL_TSI_SECOND&quot;&gt;
| &lt;SQL_TSI_MINUTE: &quot;SQL_TSI_MINUTE&quot;&gt;
| &lt;SQL_TSI_HOUR: &quot;SQL_TSI_HOUR&quot;&gt;
| &lt;SQL_TSI_DAY: &quot;SQL_TSI_DAY&quot;&gt;
| &lt;SQL_TSI_WEEK: &quot;SQL_TSI_WEEK&quot;&gt;
| &lt;SQL_TSI_MONTH: &quot;SQL_TSI_MONTH&quot;&gt;
| &lt;SQL_TSI_QUARTER: &quot;SQL_TSI_QUARTER&quot;&gt;
| &lt;SQL_TSI_YEAR: &quot;SQL_TSI_YEAR&quot;&gt;
}

   </para></entry>
          </row>
          <!-- Token -->
          <row>
            <entry><para>
&lt;DEFAULT&gt; TOKEN : {
&lt;ALL_IN_GROUP: &lt;ID&gt; &lt;PERIOD&gt; &lt;STAR&gt;&gt;
| &lt;ID: &lt;QUOTED_ID&gt; (&lt;PERIOD&gt; &lt;QUOTED_ID&gt;)*&gt;
| &lt;#QUOTED_ID: &lt;ID_PART&gt; | &quot;\&quot;&quot; (&quot;\&quot;\&quot;&quot; | ~[&quot;\&quot;&quot;])+ &quot;\&quot;&quot;&gt;
| &lt;#ID_PART: (&quot;@&quot; | &quot;#&quot; | &lt;LETTER&gt;) (&lt;LETTER&gt; | &quot;_&quot; | &lt;DIGIT&gt;)*&gt;
| &lt;DATETYPE: &quot;{&quot; &quot;d&quot;&gt;
| &lt;TIMETYPE: &quot;{&quot; &quot;t&quot;&gt;
| &lt;TIMESTAMPTYPE: &quot;{&quot; &quot;ts&quot;&gt;
| &lt;BOOLEANTYPE: &quot;{&quot; &quot;b&quot;&gt;
| &lt;INTEGERVAL: (&lt;MINUS&gt;)? (&lt;DIGIT&gt;)+&gt;
| &lt;FLOATVAL: (&lt;MINUS&gt;)? (&lt;DIGIT&gt;)* &lt;PERIOD&gt; (&lt;DIGIT&gt;)+ ([&quot;e&quot;,&quot;E&quot;] ([&quot;+&quot;,&quot;-&quot;])? (&lt;DIGIT&gt;)+)?&gt;
| &lt;STRINGVAL: (&quot;N&quot;)? &quot;\&apos;&quot; (&quot;\&apos;\&apos;&quot; | ~[&quot;\&apos;&quot;])* &quot;\&apos;&quot;&gt;
| &lt;#LETTER: [&quot;a&quot;-&quot;z&quot;,&quot;A&quot;-&quot;Z&quot;] | [&quot;\u0153&quot;-&quot;\ufffd&quot;]&gt;
| &lt;#DIGIT: [&quot;0&quot;-&quot;9&quot;]&gt;
}

   </para></entry>
          </row>
          <!-- Token -->
          <row>
            <entry><para>
&lt;DEFAULT&gt; TOKEN : {
&lt;COMMA: &quot;,&quot;&gt;
| &lt;PERIOD: &quot;.&quot;&gt;
| &lt;LPAREN: &quot;(&quot;&gt;
| &lt;RPAREN: &quot;)&quot;&gt;
| &lt;LBRACE: &quot;{&quot;&gt;
| &lt;RBRACE: &quot;}&quot;&gt;
| &lt;EQ: &quot;=&quot;&gt;
| &lt;NE: &quot;&lt;&gt;&quot;&gt;
| &lt;NE2: &quot;!=&quot;&gt;
| &lt;LT: &quot;&lt;&quot;&gt;
| &lt;LE: &quot;&lt;=&quot;&gt;
| &lt;GT: &quot;&gt;&quot;&gt;
| &lt;GE: &quot;&gt;=&quot;&gt;
| &lt;STAR: &quot;*&quot;&gt;
| &lt;SLASH: &quot;/&quot;&gt;
| &lt;PLUS: &quot;+&quot;&gt;
| &lt;MINUS: &quot;-&quot;&gt;
| &lt;QMARK: &quot;?&quot;&gt;
| &lt;DOLLAR: &quot;$&quot;&gt;
| &lt;SEMICOLON: &quot;;&quot;&gt;
| &lt;CONCAT_OP: &quot;||&quot;&gt;
}

   </para></entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </sect1>
  <sect1 remap="h2">
    <title>NON-TERMINALS</title>
    <informaltable frame="none">
      <tgroup cols="3">
        <colspec colname="c1" colwidth="33*"/>
        <colspec colname="c2" colwidth="5*"/>
        <colspec colname="c3" colwidth="62*"/>
        <tbody>
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod1" xreflabel="stringVal"/>stringVal</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>( &lt;STRINGVAL&gt; )</para></entry>
          </row>
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod2" xreflabel="id"/>id</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>( &lt;ID&gt; )</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod3" xreflabel="command"/>command</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>( ( <link linkend="SQLParser.html-prod4">createUpdateProcedure</link> ) | <link linkend="SQLParser.html-prod5">userCommand</link> | <link linkend="SQLParser.html-prod6">callableStatement</link> ) ( &lt;SEMICOLON&gt; )? &lt;EOF&gt;</para></entry>
          </row>
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod5" xreflabel="userCommand"/>userCommand</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>( <link linkend="SQLParser.html-prod7">queryExpression</link> | <link linkend="SQLParser.html-prod8">storedProcedure</link> | <link linkend="SQLParser.html-prod9">insert</link> | <link linkend="SQLParser.html-prod10">update</link> | <link linkend="SQLParser.html-prod11">delete</link> | <link linkend="SQLParser.html-prod12">dropTable</link> | <link linkend="SQLParser.html-prod13">createTempTable</link> )</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod12" xreflabel="dropTable"/>dropTable</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>&lt;DROP&gt; &lt;TABLE&gt; <link linkend="SQLParser.html-prod2">id</link></para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod13" xreflabel="createTempTable"/>createTempTable</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>&lt;CREATE&gt; &lt;LOCAL&gt; &lt;TEMPORARY&gt; &lt;TABLE&gt; <link linkend="SQLParser.html-prod2">id</link> &lt;LPAREN&gt; <link linkend="SQLParser.html-prod14">createElementsWithTypes</link> &lt;RPAREN&gt;</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod15" xreflabel="errorStatement"/>errorStatement</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>&lt;ERROR&gt; <link linkend="SQLParser.html-prod16">expression</link></para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod17" xreflabel="statement"/>statement</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>( <link linkend="SQLParser.html-prod18">ifStatement</link> | <link linkend="SQLParser.html-prod19">loopStatement</link> | <link linkend="SQLParser.html-prod20">whileStatement</link> | <link linkend="SQLParser.html-prod21">delimitedStatement</link> )</para></entry>
          </row>
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod21" xreflabel="delimitedStatement"/>delimitedStatement</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>( <link linkend="SQLParser.html-prod22">sqlStatement</link> | <link linkend="SQLParser.html-prod15">errorStatement</link> | <link linkend="SQLParser.html-prod23">assignStatement</link> | <link linkend="SQLParser.html-prod24">declareStatement</link> | <link linkend="SQLParser.html-prod25">continueStatement</link> | <link linkend="SQLParser.html-prod26">breakStatement</link> ) &lt;SEMICOLON&gt;</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod27" xreflabel="block"/>block</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>( <link linkend="SQLParser.html-prod17">statement</link> | ( &lt;BEGIN&gt; ( <link linkend="SQLParser.html-prod17">statement</link> )* &lt;END&gt; ) )</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod26" xreflabel="breakStatement"/>breakStatement</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>&lt;BREAK&gt;</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod25" xreflabel="continueStatement"/>continueStatement</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>&lt;CONTINUE&gt;</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod20" xreflabel="whileStatement"/>whileStatement</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>&lt;WHILE&gt; &lt;LPAREN&gt; <link linkend="SQLParser.html-prod28">criteria</link> &lt;RPAREN&gt; <link linkend="SQLParser.html-prod27">block</link></para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod19" xreflabel="loopStatement"/>loopStatement</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>&lt;LOOP&gt; &lt;ON&gt; &lt;LPAREN&gt; <link linkend="SQLParser.html-prod7">queryExpression</link> &lt;RPAREN&gt; &lt;AS&gt; <link linkend="SQLParser.html-prod2">id</link><link linkend="SQLParser.html-prod27">block</link></para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod18" xreflabel="ifStatement"/>ifStatement</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>&lt;IF&gt; &lt;LPAREN&gt; <link linkend="SQLParser.html-prod28">criteria</link> &lt;RPAREN&gt; <link linkend="SQLParser.html-prod27">block</link> ( &lt;ELSE&gt; <link linkend="SQLParser.html-prod27">block</link> )?</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod29" xreflabel="criteriaSelector"/>criteriaSelector</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>( ( &lt;EQ&gt; | &lt;NE&gt; | &lt;NE2&gt; | &lt;LE&gt; | &lt;GE&gt; | &lt;LT&gt; | &lt;GT&gt; | &lt;IN&gt; | &lt;LIKE&gt; | ( &lt;IS&gt; &lt;NULL&gt; ) | &lt;BETWEEN&gt; ) )? &lt;CRITERIA&gt; ( &lt;ON&gt; &lt;LPAREN&gt; <link linkend="SQLParser.html-prod2">id</link> ( &lt;COMMA&gt; <link linkend="SQLParser.html-prod2">id</link> )* &lt;RPAREN&gt; )?</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod30" xreflabel="hasCriteria"/>hasCriteria</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>&lt;HAS&gt; <link linkend="SQLParser.html-prod29">criteriaSelector</link></para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod24" xreflabel="declareStatement"/>declareStatement</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>&lt;DECLARE&gt; <link linkend="SQLParser.html-prod31">dataType</link><link linkend="SQLParser.html-prod2">id</link> ( &lt;EQ&gt; <link linkend="SQLParser.html-prod32">assignStatementOperand</link> )?</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod23" xreflabel="assignStatement"/>assignStatement</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para><link linkend="SQLParser.html-prod2">id</link> &lt;EQ&gt; <link linkend="SQLParser.html-prod32">assignStatementOperand</link></para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod32" xreflabel="assignStatementOperand"/>assignStatementOperand</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>( ( <link linkend="SQLParser.html-prod9">insert</link> ) | <link linkend="SQLParser.html-prod10">update</link> | <link linkend="SQLParser.html-prod11">delete</link> | <link linkend="SQLParser.html-prod8">storedProcedure</link> | ( <link linkend="SQLParser.html-prod16">expression</link> ) | <link linkend="SQLParser.html-prod7">queryExpression</link> )</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod22" xreflabel="sqlStatement"/>sqlStatement</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>( ( <link linkend="SQLParser.html-prod33">dynamicCommand</link> ) | <link linkend="SQLParser.html-prod5">userCommand</link> )</para></entry>
          </row>
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod34" xreflabel="translateCriteria"/>translateCriteria</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>&lt;TRANSLATE&gt; <link linkend="SQLParser.html-prod29">criteriaSelector</link> ( &lt;WITH&gt; &lt;LPAREN&gt; <link linkend="SQLParser.html-prod2">id</link> &lt;EQ&gt; <link linkend="SQLParser.html-prod16">expression</link> ( &lt;COMMA&gt; <link linkend="SQLParser.html-prod2">id</link> &lt;EQ&gt; <link linkend="SQLParser.html-prod16">expression</link> )* &lt;RPAREN&gt; )?</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod4" xreflabel="createUpdateProcedure"/>createUpdateProcedure</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>&lt;CREATE&gt; ( &lt;VIRTUAL&gt; )? ( &lt;UPDATE&gt; )? &lt;PROCEDURE&gt; <link linkend="SQLParser.html-prod27">block</link></para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod33" xreflabel="dynamicCommand"/>dynamicCommand</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>( &lt;EXECUTE&gt; | &lt;EXEC&gt; ) &lt;STRING&gt; <link linkend="SQLParser.html-prod16">expression</link> ( &lt;AS&gt; <link linkend="SQLParser.html-prod14">createElementsWithTypes</link> ( &lt;INTO&gt; <link linkend="SQLParser.html-prod2">id</link> )? )? ( &lt;USING&gt; <link linkend="SQLParser.html-prod35">setClauseList</link> )? ( &lt;UPDATE&gt; ( ( &lt;INTEGERVAL&gt; ) | ( &lt;STAR&gt; ) ) )?</para></entry>
          </row>
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod35" xreflabel="setClauseList"/>setClauseList</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para><link linkend="SQLParser.html-prod2">id</link> &lt;EQ&gt; ( &lt;COMMA&gt; <link linkend="SQLParser.html-prod2">id</link> &lt;EQ&gt; )*</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod14" xreflabel="createElementsWithTypes"/>createElementsWithTypes</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para><link linkend="SQLParser.html-prod2">id</link><link linkend="SQLParser.html-prod31">dataType</link> ( &lt;COMMA&gt; <link linkend="SQLParser.html-prod2">id</link><link linkend="SQLParser.html-prod31">dataType</link> )*</para></entry>
          </row>
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod6" xreflabel="callableStatement"/>callableStatement</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>&lt;LBRACE&gt; ( &lt;QMARK&gt; &lt;EQ&gt; )? &lt;ID&gt; <link linkend="SQLParser.html-prod2">id</link> ( &lt;LPAREN&gt; ( <link linkend="SQLParser.html-prod36">executeUnnamedParams</link> ) &lt;RPAREN&gt; )? &lt;RBRACE&gt; ( <link linkend="SQLParser.html-prod37">option</link> )?</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod8" xreflabel="storedProcedure"/>storedProcedure</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>( ( &lt;EXEC&gt; | &lt;EXECUTE&gt; ) <link linkend="SQLParser.html-prod2">id</link> &lt;LPAREN&gt; ( <link linkend="SQLParser.html-prod38">executeNamedParams</link> | <link linkend="SQLParser.html-prod36">executeUnnamedParams</link> ) &lt;RPAREN&gt; ) ( <link linkend="SQLParser.html-prod37">option</link> )?</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod36" xreflabel="executeUnnamedParams"/>executeUnnamedParams</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>( <link linkend="SQLParser.html-prod16">expression</link> ( &lt;COMMA&gt; <link linkend="SQLParser.html-prod16">expression</link> )* )?</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod38" xreflabel="executeNamedParams"/>executeNamedParams</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>( <link linkend="SQLParser.html-prod2">id</link> &lt;EQ&gt; <link linkend="SQLParser.html-prod16">expression</link> ( &lt;COMMA&gt; <link linkend="SQLParser.html-prod2">id</link> &lt;EQ&gt; <link linkend="SQLParser.html-prod16">expression</link> )* )</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod9" xreflabel="insert"/>insert</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>&lt;INSERT&gt; &lt;INTO&gt; <link linkend="SQLParser.html-prod2">id</link> ( &lt;LPAREN&gt; <link linkend="SQLParser.html-prod2">id</link> ( &lt;COMMA&gt; <link linkend="SQLParser.html-prod2">id</link> )* &lt;RPAREN&gt; )? ( ( &lt;VALUES&gt; <link linkend="SQLParser.html-prod39">rowValues</link> ) | ( <link linkend="SQLParser.html-prod7">queryExpression</link> ) ) ( <link linkend="SQLParser.html-prod37">option</link> )?</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod39" xreflabel="rowValues"/>rowValues</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>&lt;LPAREN&gt; <link linkend="SQLParser.html-prod16">expression</link> ( &lt;COMMA&gt; <link linkend="SQLParser.html-prod16">expression</link> )* &lt;RPAREN&gt;</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod10" xreflabel="update"/>update</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>&lt;UPDATE&gt; <link linkend="SQLParser.html-prod2">id</link> &lt;SET&gt; <link linkend="SQLParser.html-prod35">setClauseList</link> ( <link linkend="SQLParser.html-prod40">where</link> )? ( <link linkend="SQLParser.html-prod37">option</link> )?</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod11" xreflabel="delete"/>delete</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>&lt;DELETE&gt; &lt;FROM&gt; <link linkend="SQLParser.html-prod2">id</link> ( <link linkend="SQLParser.html-prod40">where</link> )? ( <link linkend="SQLParser.html-prod37">option</link> )?</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod7" xreflabel="queryExpression"/>queryExpression</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para><link linkend="SQLParser.html-prod41">queryExpressionBody</link></para></entry>
          </row>
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod41" xreflabel="queryExpressionBody"/>queryExpressionBody</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para><link linkend="SQLParser.html-prod42">queryTerm</link> ( ( &lt;UNION&gt; | &lt;EXCEPT&gt; ) ( &lt;ALL&gt; | &lt;DISTINCT&gt; )? <link linkend="SQLParser.html-prod42">queryTerm</link> )* ( <link linkend="SQLParser.html-prod43">orderby</link> )? ( <link linkend="SQLParser.html-prod44">limit</link> )? ( <link linkend="SQLParser.html-prod37">option</link> )?</para></entry>
          </row>
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod42" xreflabel="queryTerm"/>queryTerm</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para><link linkend="SQLParser.html-prod45">queryPrimary</link> ( &lt;INTERSECT&gt; ( &lt;ALL&gt; | &lt;DISTINCT&gt; )? <link linkend="SQLParser.html-prod45">queryPrimary</link> )*</para></entry>
          </row>
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod45" xreflabel="queryPrimary"/>queryPrimary</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>( <link linkend="SQLParser.html-prod46">query</link> | ( &lt;LPAREN&gt; <link linkend="SQLParser.html-prod41">queryExpressionBody</link> &lt;RPAREN&gt; ) )</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod46" xreflabel="query"/>query</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para><link linkend="SQLParser.html-prod47">select</link> ( <link linkend="SQLParser.html-prod48">into</link> )? ( <link linkend="SQLParser.html-prod49">from</link> ( <link linkend="SQLParser.html-prod40">where</link> )? ( <link linkend="SQLParser.html-prod50">groupBy</link> )? ( <link linkend="SQLParser.html-prod51">having</link> )? )?</para></entry>
          </row>
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod48" xreflabel="into"/>into</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>&lt;INTO&gt; ( <link linkend="SQLParser.html-prod2">id</link> )</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod47" xreflabel="select"/>select</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>&lt;SELECT&gt; ( &lt;ALL&gt; | ( &lt;DISTINCT&gt; ) )? ( &lt;STAR&gt; | ( <link linkend="SQLParser.html-prod52">selectSymbol</link> ( &lt;COMMA&gt; <link linkend="SQLParser.html-prod52">selectSymbol</link> )* ) )</para></entry>
          </row>
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod52" xreflabel="selectSymbol"/>selectSymbol</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>( ( &lt;ALL_IN_GROUP&gt; ) | ( <link linkend="SQLParser.html-prod16">expression</link> ) ( ( &lt;AS&gt; )? ( <link linkend="SQLParser.html-prod2">id</link> ) )? )</para></entry>
          </row>
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod53" xreflabel="aggregateSymbol"/>aggregateSymbol</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>( ( &lt;COUNT&gt; &lt;LPAREN&gt; &lt;STAR&gt; &lt;RPAREN&gt; ) | ( ( &lt;COUNT&gt; | &lt;SUM&gt; | &lt;AVG&gt; | &lt;MIN&gt; | &lt;MAX&gt; ) &lt;LPAREN&gt; ( &lt;DISTINCT&gt; )? <link linkend="SQLParser.html-prod16">expression</link> &lt;RPAREN&gt; ) )</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod49" xreflabel="from"/>from</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>&lt;FROM&gt; ( <link linkend="SQLParser.html-prod54">tableReference</link> ( &lt;COMMA&gt; <link linkend="SQLParser.html-prod54">tableReference</link> )* )</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod54" xreflabel="tableReference"/>tableReference</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>( ( &lt;LBRACE&gt; &lt;OJ&gt; <link linkend="SQLParser.html-prod55">tableReferenceUnescaped</link> &lt;RBRACE&gt; ) | <link linkend="SQLParser.html-prod55">tableReferenceUnescaped</link> )</para></entry>
          </row>
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod55" xreflabel="tableReferenceUnescaped"/>tableReferenceUnescaped</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>( <link linkend="SQLParser.html-prod56">joinedTable</link> | <link linkend="SQLParser.html-prod57">tablePrimary</link> )</para></entry>
          </row>
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod56" xreflabel="joinedTable"/>joinedTable</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para><link linkend="SQLParser.html-prod57">tablePrimary</link> ( ( <link linkend="SQLParser.html-prod58">crossJoin</link> | <link linkend="SQLParser.html-prod59">qualifiedJoin</link> ) )+</para></entry>
          </row>
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod58" xreflabel="crossJoin"/>crossJoin</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>( ( &lt;CROSS&gt; | &lt;UNION&gt; ) &lt;JOIN&gt; <link linkend="SQLParser.html-prod57">tablePrimary</link> )</para></entry>
          </row>
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod59" xreflabel="qualifiedJoin"/>qualifiedJoin</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>( ( ( &lt;RIGHT&gt; ( &lt;OUTER&gt; )? ) | ( &lt;LEFT&gt; ( &lt;OUTER&gt; )? ) | ( &lt;FULL&gt; ( &lt;OUTER&gt; )? ) | &lt;INNER&gt; )? &lt;JOIN&gt; <link linkend="SQLParser.html-prod54">tableReference</link> &lt;ON&gt; <link linkend="SQLParser.html-prod28">criteria</link> )</para></entry>
          </row>
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod57" xreflabel="tablePrimary"/>tablePrimary</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>( <link linkend="SQLParser.html-prod60">unaryFromClause</link> | <link linkend="SQLParser.html-prod61">subqueryFromClause</link> | ( &lt;LPAREN&gt; <link linkend="SQLParser.html-prod56">joinedTable</link> &lt;RPAREN&gt; ) ) ( ( &lt;MAKEDEP&gt; ) | ( &lt;MAKENOTDEP&gt; ) )?</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod61" xreflabel="subqueryFromClause"/>subqueryFromClause</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>&lt;LPAREN&gt; ( <link linkend="SQLParser.html-prod7">queryExpression</link> | <link linkend="SQLParser.html-prod8">storedProcedure</link> ) &lt;RPAREN&gt; ( &lt;AS&gt; )? <link linkend="SQLParser.html-prod2">id</link></para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod60" xreflabel="unaryFromClause"/>unaryFromClause</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>( &lt;ID&gt; ( ( &lt;AS&gt; )? <link linkend="SQLParser.html-prod2">id</link> )? )</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod40" xreflabel="where"/>where</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>&lt;WHERE&gt; <link linkend="SQLParser.html-prod28">criteria</link></para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod28" xreflabel="criteria"/>criteria</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para><link linkend="SQLParser.html-prod62">compoundCritOr</link></para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod62" xreflabel="compoundCritOr"/>compoundCritOr</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para><link linkend="SQLParser.html-prod63">compoundCritAnd</link> ( &lt;OR&gt; <link linkend="SQLParser.html-prod63">compoundCritAnd</link> )*</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod63" xreflabel="compoundCritAnd"/>compoundCritAnd</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para><link linkend="SQLParser.html-prod64">notCrit</link> ( &lt;AND&gt; <link linkend="SQLParser.html-prod64">notCrit</link> )*</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod64" xreflabel="notCrit"/>notCrit</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>( &lt;NOT&gt; )? <link linkend="SQLParser.html-prod65">primary</link></para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod65" xreflabel="primary"/>primary</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>( <link linkend="SQLParser.html-prod66">predicate</link> | ( &lt;LPAREN&gt; <link linkend="SQLParser.html-prod28">criteria</link> &lt;RPAREN&gt; ) )</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod66" xreflabel="predicate"/>predicate</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>( <link linkend="SQLParser.html-prod67">subqueryCompareCriteria</link> | <link linkend="SQLParser.html-prod68">compareCrit</link> | <link linkend="SQLParser.html-prod69">matchCrit</link> | <link linkend="SQLParser.html-prod70">betweenCrit</link> | <link linkend="SQLParser.html-prod71">setCrit</link> | <link linkend="SQLParser.html-prod72">existsCriteria</link> | <link linkend="SQLParser.html-prod30">hasCriteria</link> | <link linkend="SQLParser.html-prod34">translateCriteria</link> | <link linkend="SQLParser.html-prod73">isNullCrit</link> )</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod68" xreflabel="compareCrit"/>compareCrit</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para><link linkend="SQLParser.html-prod16">expression</link> ( &lt;EQ&gt; | &lt;NE&gt; | &lt;NE2&gt; | &lt;LT&gt; | &lt;LE&gt; | &lt;GT&gt; | &lt;GE&gt; ) <link linkend="SQLParser.html-prod16">expression</link></para></entry>
          </row>
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod74" xreflabel="subquery"/>subquery</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>&lt;LPAREN&gt; ( <link linkend="SQLParser.html-prod7">queryExpression</link> | <link linkend="SQLParser.html-prod8">storedProcedure</link> ) &lt;RPAREN&gt;</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod67" xreflabel="subqueryCompareCriteria"/>subqueryCompareCriteria</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para><link linkend="SQLParser.html-prod16">expression</link> ( &lt;EQ&gt; | &lt;NE&gt; | &lt;NE2&gt; | &lt;LT&gt; | &lt;LE&gt; | &lt;GT&gt; | &lt;GE&gt; ) ( &lt;ANY&gt; | &lt;SOME&gt; | &lt;ALL&gt; ) <link linkend="SQLParser.html-prod74">subquery</link></para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod69" xreflabel="matchCrit"/>matchCrit</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>( <link linkend="SQLParser.html-prod16">expression</link> ( &lt;NOT&gt; )? &lt;LIKE&gt; <link linkend="SQLParser.html-prod16">expression</link> ( <link linkend="SQLParser.html-prod75">escapeChar</link> | ( &lt;LBRACE&gt; <link linkend="SQLParser.html-prod75">escapeChar</link> &lt;RBRACE&gt; ) )? )</para></entry>
          </row>
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod75" xreflabel="escapeChar"/>escapeChar</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>&lt;ESCAPE&gt; <link linkend="SQLParser.html-prod1">stringVal</link></para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod70" xreflabel="betweenCrit"/>betweenCrit</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para><link linkend="SQLParser.html-prod16">expression</link> ( &lt;NOT&gt; )? &lt;BETWEEN&gt; <link linkend="SQLParser.html-prod16">expression</link> &lt;AND&gt; <link linkend="SQLParser.html-prod16">expression</link></para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod73" xreflabel="isNullCrit"/>isNullCrit</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para><link linkend="SQLParser.html-prod16">expression</link> &lt;IS&gt; ( &lt;NOT&gt; )? &lt;NULL&gt;</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod71" xreflabel="setCrit"/>setCrit</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para><link linkend="SQLParser.html-prod16">expression</link> ( &lt;NOT&gt; )? &lt;IN&gt; ( ( <link linkend="SQLParser.html-prod74">subquery</link> ) | ( &lt;LPAREN&gt; <link linkend="SQLParser.html-prod16">expression</link> ( &lt;COMMA&gt; <link linkend="SQLParser.html-prod16">expression</link> )* &lt;RPAREN&gt; ) )</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod72" xreflabel="existsCriteria"/>existsCriteria</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>&lt;EXISTS&gt; <link linkend="SQLParser.html-prod74">subquery</link></para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod50" xreflabel="groupBy"/>groupBy</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>&lt;GROUP&gt; &lt;BY&gt; ( <link linkend="SQLParser.html-prod76">groupByItem</link> ( &lt;COMMA&gt; <link linkend="SQLParser.html-prod76">groupByItem</link> )* )</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod76" xreflabel="groupByItem"/>groupByItem</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para><link linkend="SQLParser.html-prod16">expression</link></para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod51" xreflabel="having"/>having</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>&lt;HAVING&gt; <link linkend="SQLParser.html-prod28">criteria</link></para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod43" xreflabel="orderby"/>orderby</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>&lt;ORDER&gt; &lt;BY&gt; <link linkend="SQLParser.html-prod77">sortKey</link> ( &lt;ASC&gt; | &lt;DESC&gt; )? ( &lt;COMMA&gt; <link linkend="SQLParser.html-prod77">sortKey</link> ( &lt;ASC&gt; | &lt;DESC&gt; )? )*</para></entry>
          </row>
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod77" xreflabel="sortKey"/>sortKey</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para><link linkend="SQLParser.html-prod16">expression</link></para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod44" xreflabel="limit"/>limit</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>&lt;LIMIT&gt; ( &lt;INTEGERVAL&gt; | &lt;QMARK&gt; ) ( &lt;COMMA&gt; ( &lt;INTEGERVAL&gt; | &lt;QMARK&gt; ) )?</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod37" xreflabel="option"/>option</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>&lt;OPTION&gt; ( &lt;SHOWPLAN&gt; | &lt;PLANONLY&gt; | &lt;DEBUG&gt; | &lt;MAKEDEP&gt; <link linkend="SQLParser.html-prod2">id</link> ( &lt;COMMA&gt; <link linkend="SQLParser.html-prod2">id</link> )* | &lt;MAKENOTDEP&gt; <link linkend="SQLParser.html-prod2">id</link> ( &lt;COMMA&gt; <link linkend="SQLParser.html-prod2">id</link> )* | &lt;NOCACHE&gt; ( <link linkend="SQLParser.html-prod2">id</link> ( &lt;COMMA&gt; <link linkend="SQLParser.html-prod2">id</link> )* )? )*</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod16" xreflabel="expression"/>expression</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para><link linkend="SQLParser.html-prod78">concatExpression</link></para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod78" xreflabel="concatExpression"/>concatExpression</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>( <link linkend="SQLParser.html-prod79">plusExpression</link> ( &lt;CONCAT_OP&gt; <link linkend="SQLParser.html-prod79">plusExpression</link> )* )</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod79" xreflabel="plusExpression"/>plusExpression</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>( <link linkend="SQLParser.html-prod80">timesExpression</link> ( <link linkend="SQLParser.html-prod81">plusOperator</link><link linkend="SQLParser.html-prod80">timesExpression</link> )* )</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod81" xreflabel="plusOperator"/>plusOperator</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>( &lt;PLUS&gt; | &lt;MINUS&gt; )</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod80" xreflabel="timesExpression"/>timesExpression</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>( <link linkend="SQLParser.html-prod82">basicExpression</link> ( <link linkend="SQLParser.html-prod83">timesOperator</link><link linkend="SQLParser.html-prod82">basicExpression</link> )* )</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod83" xreflabel="timesOperator"/>timesOperator</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>( &lt;STAR&gt; | &lt;SLASH&gt; )</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod82" xreflabel="basicExpression"/>basicExpression</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>( &lt;QMARK&gt; | <link linkend="SQLParser.html-prod84">literal</link> | ( &lt;LBRACE&gt; &lt;FN&gt; <link linkend="SQLParser.html-prod85">function</link> &lt;RBRACE&gt; ) | ( <link linkend="SQLParser.html-prod53">aggregateSymbol</link> ) | ( <link linkend="SQLParser.html-prod85">function</link> ) | ( &lt;ID&gt; ) | ( &lt;LPAREN&gt; <link linkend="SQLParser.html-prod16">expression</link> &lt;RPAREN&gt; ) | <link linkend="SQLParser.html-prod74">subquery</link> | <link linkend="SQLParser.html-prod86">caseExpression</link> | <link linkend="SQLParser.html-prod87">searchedCaseExpression</link> )</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod86" xreflabel="caseExpression"/>caseExpression</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>&lt;CASE&gt; <link linkend="SQLParser.html-prod16">expression</link> ( &lt;WHEN&gt; <link linkend="SQLParser.html-prod16">expression</link> &lt;THEN&gt; <link linkend="SQLParser.html-prod16">expression</link> )+ ( &lt;ELSE&gt; <link linkend="SQLParser.html-prod16">expression</link> )? &lt;END&gt;</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod87" xreflabel="searchedCaseExpression"/>searchedCaseExpression</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>&lt;CASE&gt; ( &lt;WHEN&gt; <link linkend="SQLParser.html-prod28">criteria</link> &lt;THEN&gt; <link linkend="SQLParser.html-prod16">expression</link> )+ ( &lt;ELSE&gt; <link linkend="SQLParser.html-prod16">expression</link> )? &lt;END&gt;</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod85" xreflabel="function"/>function</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>( ( &lt;CONVERT&gt; &lt;LPAREN&gt; <link linkend="SQLParser.html-prod16">expression</link> &lt;COMMA&gt; <link linkend="SQLParser.html-prod31">dataType</link> &lt;RPAREN&gt; ) | ( &lt;CAST&gt; &lt;LPAREN&gt; <link linkend="SQLParser.html-prod16">expression</link> &lt;AS&gt; <link linkend="SQLParser.html-prod31">dataType</link> &lt;RPAREN&gt; ) | ( ( &lt;TIMESTAMPADD&gt; | &lt;TIMESTAMPDIFF&gt; ) &lt;LPAREN&gt; <link linkend="SQLParser.html-prod88">intervalType</link> &lt;COMMA&gt; <link linkend="SQLParser.html-prod16">expression</link> &lt;COMMA&gt; <link linkend="SQLParser.html-prod16">expression</link> &lt;RPAREN&gt; ) | ( ( &lt;LEFT&gt; | &lt;RIGHT&gt; | &lt;CHAR&gt; ) &lt;LPAREN&gt; ( <link linkend="SQLParser.html-prod16">expression</link> ( &lt;COMMA&gt; <link linkend="SQLParser.html-prod16">expression</link> )* )? &lt;RPAREN&gt; ) | ( ( &lt;INSERT&gt; ) &lt;LPAREN&gt; ( <link linkend="SQLParser.html-prod16">expression</link> ( &lt;COMMA&gt; <link linkend="SQLParser.html-prod16">expression</link> )* )? &lt;RPAREN&gt; ) | ( ( &lt;TRANSLATE&gt; ) &lt;LPAREN&gt; ( <link linkend="SQLParser.html-prod16">expression</link> ( &lt;COMMA&gt; <link linkend="SQLParser.html-prod16">expression</link> )* )? &lt;RPAREN&gt; ) | ( <link linkend="SQLParser.html-prod2">id</link> &lt;LPAREN&gt; ( <link linkend="SQLParser.html-prod16">expression</link> ( &lt;COMMA&gt; <link linkend="SQLParser.html-prod16">expression</link> )* )? &lt;RPAREN&gt; ) )</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod31" xreflabel="dataType"/>dataType</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>( &lt;STRING&gt; | &lt;BOOLEAN&gt; | &lt;BYTE&gt; | &lt;SHORT&gt; | &lt;CHAR&gt; | &lt;INTEGER&gt; | &lt;LONG&gt; | &lt;BIGINTEGER&gt; | &lt;FLOAT&gt; | &lt;DOUBLE&gt; | &lt;BIGDECIMAL&gt; | &lt;DATE&gt; | &lt;TIME&gt; | &lt;TIMESTAMP&gt; | &lt;OBJECT&gt; | &lt;BLOB&gt; | &lt;CLOB&gt; | &lt;XML&gt; )</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod88" xreflabel="intervalType"/>intervalType</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>( &lt;SQL_TSI_FRAC_SECOND&gt; | &lt;SQL_TSI_SECOND&gt; | &lt;SQL_TSI_MINUTE&gt; | &lt;SQL_TSI_HOUR&gt; | &lt;SQL_TSI_DAY&gt; | &lt;SQL_TSI_WEEK&gt; | &lt;SQL_TSI_MONTH&gt; | &lt;SQL_TSI_QUARTER&gt; | &lt;SQL_TSI_YEAR&gt; )</para></entry>
          </row>
          
          <row>
            <entry align="right" valign="top"><para><anchor id="SQLParser.html-prod84" xreflabel="literal"/>literal</para></entry>
            <entry align="center" valign="top"><para>::=</para></entry>
            <entry align="left" valign="top"><para>( <link linkend="SQLParser.html-prod1">stringVal</link> | &lt;INTEGERVAL&gt; | &lt;FLOATVAL&gt; | &lt;FALSE&gt; | &lt;TRUE&gt; | &lt;UNKNOWN&gt; | &lt;NULL&gt; | ( ( &lt;BOOLEANTYPE&gt; | &lt;TIMESTAMPTYPE&gt; | &lt;DATETYPE&gt; | &lt;TIMETYPE&gt; ) <link linkend="SQLParser.html-prod1">stringVal</link> &lt;RBRACE&gt; ) )</para></entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </sect1>
</appendix>
